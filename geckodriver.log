1573592940974	mozrunner::runner	INFO	Running command: "/usr/bin/firefox" "-marionette" "-foreground" "-no-remote" "-profile" "/tmp/rust_mozprofile.79r9DN8b8T1g"
1573592947937	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1573592947937	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1573592947937	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1573592947938	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1573592957514	Marionette	INFO	Listening on port 40475
1573592957548	Marionette	WARN	TLS certificate errors will be ignored for this session
1573592968814	Marionette	INFO	Stopped listening on port 40475
1573593254387	mozrunner::runner	INFO	Running command: "/usr/bin/firefox" "-marionette" "-foreground" "-no-remote" "-profile" "/tmp/rust_mozprofile.nLXiPXaT1enc"
1573593255641	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1573593255641	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1573593255642	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1573593255642	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1573593259799	Marionette	INFO	Listening on port 42615
1573593259816	Marionette	WARN	TLS certificate errors will be ignored for this session
SourceActor threw an exception: [Exception... "Failed to open input source 'file:///'"  nsresult: "0x80520015 (NS_ERROR_FILE_ACCESS_DENIED)"  location: "JS frame :: resource://devtools/shared/DevToolsUtils.js :: mainThreadFetch/< :: line 678"  data: yes]
Stack: mainThreadFetch/<@resource://devtools/shared/DevToolsUtils.js:678:15
mainThreadFetch@resource://devtools/shared/DevToolsUtils.js:530:10
_fetchURLContents@resource://devtools/server/actors/utils/TabSources.js:580:22
urlContents@resource://devtools/server/actors/utils/TabSources.js:547:17
_resurrectSource@resource://devtools/server/actors/thread.js:2033:69
addAllSources@resource://devtools/server/actors/thread.js:1334:14
onSources@resource://devtools/server/actors/thread.js:1340:10
onPacket@resource://devtools/server/debugger-server-connection.js:378:58
receiveMessage@resource://devtools/shared/transport/child-transport.js:66:16
Line: 678, column: 0
JavaScript error: resource://devtools/shared/DevToolsUtils.js, line 678: NS_ERROR_FILE_ACCESS_DENIED: Failed to open input source 'file:///'
1573593307026	Marionette	INFO	Stopped listening on port 42615
1573593308016	mozrunner::runner	INFO	Running command: "/usr/bin/firefox" "-marionette" "-foreground" "-no-remote" "-profile" "/tmp/rust_mozprofile.uPOrYvh4Rkwg"
1573593309141	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1573593309141	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1573593309142	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1573593309142	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1573593313464	Marionette	INFO	Listening on port 39911
1573593313539	Marionette	WARN	TLS certificate errors will be ignored for this session
JavaScript error: resource://gre/modules/UrlClassifierListManager.jsm, line 680: TypeError: this.tablesData[table] is undefined
1573593326332	Marionette	INFO	Stopped listening on port 39911
1573593421264	mozrunner::runner	INFO	Running command: "/usr/bin/firefox" "-marionette" "-foreground" "-no-remote" "-profile" "/tmp/rust_mozprofile.2t37N0ftsfSF"
1573593422358	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1573593422358	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1573593422358	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1573593422359	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1573593426558	Marionette	INFO	Listening on port 32947
1573593426584	Marionette	WARN	TLS certificate errors will be ignored for this session
1573593455796	Marionette	INFO	Stopped listening on port 32947
[Parent 27994, Gecko_IOThread] WARNING: pipe error (68): Connection reset by peer: file /build/firefox-hE9N0Y/firefox-70.0.1+build1/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 358

###!!! [Child][RunMessage] Error: Channel closing: too late to send/recv, messages will be lost

1573593937222	mozrunner::runner	INFO	Running command: "/usr/bin/firefox" "-marionette" "-foreground" "-no-remote" "-profile" "/tmp/rust_mozprofile.xPQhQAxwdXAE"
1573593938284	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1573593938285	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1573593938285	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1573593938285	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1573593942552	Marionette	INFO	Listening on port 36257
1573593942644	Marionette	WARN	TLS certificate errors will be ignored for this session
1573593966089	Marionette	INFO	Stopped listening on port 36257

###!!! [Child][RunMessage] Error: Channel closing: too late to send/recv, messages will be lost

[Child 28710, Chrome_ChildThread] WARNING: pipe error (3): Connection reset by peer: file /build/firefox-hE9N0Y/firefox-70.0.1+build1/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 358
1573594022152	mozrunner::runner	INFO	Running command: "/usr/bin/firefox" "-marionette" "-foreground" "-no-remote" "-profile" "/tmp/rust_mozprofile.hKbhungQQJUC"
1573594023506	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1573594023507	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1573594023507	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1573594023507	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1573594027946	Marionette	INFO	Listening on port 43393
1573594027983	Marionette	WARN	TLS certificate errors will be ignored for this session
1573594078210	mozrunner::runner	INFO	Running command: "/usr/bin/firefox" "-marionette" "-foreground" "-no-remote" "-profile" "/tmp/rust_mozprofile.ROJnCh7Yby49"
1573594079264	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1573594079264	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1573594079264	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1573594079265	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1573594084120	Marionette	INFO	Listening on port 45773
1573594084132	Marionette	WARN	TLS certificate errors will be ignored for this session
1573594092981	Marionette	INFO	Stopped listening on port 43393
IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)

[Parent 29200, Gecko_IOThread] WARNING: pipe error (94): Connection reset by peer: file /build/firefox-hE9N0Y/firefox-70.0.1+build1/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 358
[Parent 29200, Gecko_IOThread] WARNING: pipe error (134): Connection reset by peer: file /build/firefox-hE9N0Y/firefox-70.0.1+build1/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 358
JavaScript error: , line 0: UnknownError: The operation failed for reasons unrelated to the database itself and not covered by any other error code.
1573594222099	Marionette	INFO	Stopped listening on port 45773
1573594222351	mozrunner::runner	INFO	Running command: "/usr/bin/firefox" "-marionette" "-foreground" "-no-remote" "-profile" "/tmp/rust_mozprofile.Pd8oHMCdJyB7"
1573594223412	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1573594223413	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1573594223413	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1573594223413	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1573594227523	Marionette	INFO	Listening on port 44075
1573594227570	Marionette	WARN	TLS certificate errors will be ignored for this session
SourceActor threw an exception: [Exception... "Failed to open input source 'file:///'"  nsresult: "0x80520015 (NS_ERROR_FILE_ACCESS_DENIED)"  location: "JS frame :: resource://devtools/shared/DevToolsUtils.js :: mainThreadFetch/< :: line 678"  data: yes]
Stack: mainThreadFetch/<@resource://devtools/shared/DevToolsUtils.js:678:15
mainThreadFetch@resource://devtools/shared/DevToolsUtils.js:530:10
_fetchURLContents@resource://devtools/server/actors/utils/TabSources.js:580:22
urlContents@resource://devtools/server/actors/utils/TabSources.js:547:17
_resurrectSource@resource://devtools/server/actors/thread.js:2033:69
addAllSources@resource://devtools/server/actors/thread.js:1334:14
onSources@resource://devtools/server/actors/thread.js:1340:10
onPacket@resource://devtools/server/debugger-server-connection.js:378:58
receiveMessage@resource://devtools/shared/transport/child-transport.js:66:16
Line: 678, column: 0
JavaScript error: resource://devtools/shared/DevToolsUtils.js, line 678: NS_ERROR_FILE_ACCESS_DENIED: Failed to open input source 'file:///'
1573594301682	mozrunner::runner	INFO	Running command: "/usr/bin/firefox" "-marionette" "-foreground" "-no-remote" "-profile" "/tmp/rust_mozprofile.Js9IUEWtgCWa"
1573594302824	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1573594302824	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1573594302825	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1573594302825	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1573594307069	Marionette	INFO	Listening on port 38525
1573594307116	Marionette	WARN	TLS certificate errors will be ignored for this session
IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)

IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)

[Parent 29584, Gecko_IOThread] WARNING: pipe error (91): Connection reset by peer: file /build/firefox-hE9N0Y/firefox-70.0.1+build1/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 358
1573594313263	Marionette	INFO	Stopped listening on port 44075
[Parent 29837, Gecko_IOThread] WARNING: pipe error: Broken pipe: file /build/firefox-hE9N0Y/firefox-70.0.1+build1/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 728
IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)


###!!! [Child][RunMessage] Error: Channel closing: too late to send/recv, messages will be lost

1573594355502	Marionette	INFO	Stopped listening on port 38525
1573594420596	mozrunner::runner	INFO	Running command: "/usr/bin/firefox" "-marionette" "-foreground" "-no-remote" "-profile" "/tmp/rust_mozprofile.X8kUhKFcPVht"
1573594421734	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1573594421735	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1573594421736	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1573594421736	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1573594426695	Marionette	INFO	Listening on port 33571
1573594426722	Marionette	WARN	TLS certificate errors will be ignored for this session
IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)

[Parent 30206, Gecko_IOThread] WARNING: pipe error (109): Connection reset by peer: file /build/firefox-hE9N0Y/firefox-70.0.1+build1/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 358
[Parent 30206, Gecko_IOThread] WARNING: pipe error (165): Connection reset by peer: file /build/firefox-hE9N0Y/firefox-70.0.1+build1/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 358
[Parent 30206, Gecko_IOThread] WARNING: pipe error (144): Connection reset by peer: file /build/firefox-hE9N0Y/firefox-70.0.1+build1/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 358
1573594474954	Marionette	INFO	Stopped listening on port 33571
1573594532727	mozrunner::runner	INFO	Running command: "/usr/bin/firefox" "-marionette" "-foreground" "-no-remote" "-profile" "/tmp/rust_mozprofile.RRH8KMOuSVqA"
1573594533822	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1573594533823	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1573594533823	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1573594533823	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1573594538013	Marionette	INFO	Listening on port 40539
1573594538061	Marionette	WARN	TLS certificate errors will be ignored for this session
SourceActor threw an exception: [Exception... "Failed to open input source 'file:///'"  nsresult: "0x80520015 (NS_ERROR_FILE_ACCESS_DENIED)"  location: "JS frame :: resource://devtools/shared/DevToolsUtils.js :: mainThreadFetch/< :: line 678"  data: yes]
Stack: mainThreadFetch/<@resource://devtools/shared/DevToolsUtils.js:678:15
mainThreadFetch@resource://devtools/shared/DevToolsUtils.js:530:10
_fetchURLContents@resource://devtools/server/actors/utils/TabSources.js:580:22
urlContents@resource://devtools/server/actors/utils/TabSources.js:547:17
_resurrectSource@resource://devtools/server/actors/thread.js:2033:69
addAllSources@resource://devtools/server/actors/thread.js:1334:14
onSources@resource://devtools/server/actors/thread.js:1340:10
onPacket@resource://devtools/server/debugger-server-connection.js:378:58
receiveMessage@resource://devtools/shared/transport/child-transport.js:66:16
Line: 678, column: 0
JavaScript error: resource://devtools/shared/DevToolsUtils.js, line 678: NS_ERROR_FILE_ACCESS_DENIED: Failed to open input source 'file:///'
JavaScript error: resource://gre/modules/WebNavigationFrames.jsm, line 45: TypeError: window is null
JavaScript error: resource://gre/modules/WebNavigationFrames.jsm, line 45: TypeError: window is null
SourceActor threw an exception: [Exception... "Failed to open input source 'file:///'"  nsresult: "0x80520015 (NS_ERROR_FILE_ACCESS_DENIED)"  location: "JS frame :: resource://devtools/shared/DevToolsUtils.js :: mainThreadFetch/< :: line 678"  data: yes]
Stack: mainThreadFetch/<@resource://devtools/shared/DevToolsUtils.js:678:15
mainThreadFetch@resource://devtools/shared/DevToolsUtils.js:530:10
_fetchURLContents@resource://devtools/server/actors/utils/TabSources.js:580:22
urlContents@resource://devtools/server/actors/utils/TabSources.js:547:17
_resurrectSource@resource://devtools/server/actors/thread.js:2033:69
addAllSources@resource://devtools/server/actors/thread.js:1334:14
onSources@resource://devtools/server/actors/thread.js:1340:10
onPacket@resource://devtools/server/debugger-server-connection.js:378:58
receiveMessage@resource://devtools/shared/transport/child-transport.js:66:16
Line: 678, column: 0
JavaScript error: resource://devtools/shared/DevToolsUtils.js, line 678: NS_ERROR_FILE_ACCESS_DENIED: Failed to open input source 'file:///'
1573594736236	mozrunner::runner	INFO	Running command: "/usr/bin/firefox" "-marionette" "-foreground" "-no-remote" "-profile" "/tmp/rust_mozprofile.AcrKwuCNcm7j"
1573594737180	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1573594737180	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1573594737181	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1573594737181	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1573594741728	Marionette	INFO	Listening on port 33227
1573594741756	Marionette	WARN	TLS certificate errors will be ignored for this session
[Parent 30490, Gecko_IOThread] WARNING: pipe error (68): Connection reset by peer: file /build/firefox-hE9N0Y/firefox-70.0.1+build1/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 358
IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)

IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)

JavaScript error: , line 0: AbortError: A request was aborted, for example through a call to IDBTransaction.abort.
1573594750461	Marionette	INFO	Stopped listening on port 40539
SourceActor threw an exception: [Exception... "Failed to open input source 'file:///'"  nsresult: "0x80520015 (NS_ERROR_FILE_ACCESS_DENIED)"  location: "JS frame :: resource://devtools/shared/DevToolsUtils.js :: mainThreadFetch/< :: line 678"  data: yes]
Stack: mainThreadFetch/<@resource://devtools/shared/DevToolsUtils.js:678:15
mainThreadFetch@resource://devtools/shared/DevToolsUtils.js:530:10
_fetchURLContents@resource://devtools/server/actors/utils/TabSources.js:580:22
urlContents@resource://devtools/server/actors/utils/TabSources.js:547:17
_resurrectSource@resource://devtools/server/actors/thread.js:2033:69
addAllSources@resource://devtools/server/actors/thread.js:1334:14
onSources@resource://devtools/server/actors/thread.js:1340:10
onPacket@resource://devtools/server/debugger-server-connection.js:378:58
receiveMessage@resource://devtools/shared/transport/child-transport.js:66:16
Line: 678, column: 0
JavaScript error: resource://devtools/shared/DevToolsUtils.js, line 678: NS_ERROR_FILE_ACCESS_DENIED: Failed to open input source 'file:///'
1573594917012	mozrunner::runner	INFO	Running command: "/usr/bin/firefox" "-marionette" "-foreground" "-no-remote" "-profile" "/tmp/rust_mozprofile.x2xRrvnc9UDx"
1573594918496	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1573594918496	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1573594918497	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1573594918497	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1573594923806	Marionette	INFO	Listening on port 40641
1573594923857	Marionette	WARN	TLS certificate errors will be ignored for this session
[Parent 30851, Gecko_IOThread] WARNING: pipe error (68): Connection reset by peer: file /build/firefox-hE9N0Y/firefox-70.0.1+build1/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 358
IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)

IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)

1573594927438	Marionette	INFO	Stopped listening on port 33227
1573594976302	mozrunner::runner	INFO	Running command: "/usr/bin/firefox" "-marionette" "-foreground" "-no-remote" "-profile" "/tmp/rust_mozprofile.tvIXe9YWWKm4"
1573594977227	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1573594977227	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1573594977227	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1573594977228	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1573594981709	Marionette	INFO	Listening on port 41189
1573594981730	Marionette	WARN	TLS certificate errors will be ignored for this session
IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)

1573594984346	Marionette	INFO	Stopped listening on port 40641
1573595061919	mozrunner::runner	INFO	Running command: "/usr/bin/firefox" "-marionette" "-foreground" "-no-remote" "-profile" "/tmp/rust_mozprofile.Ka4Wms0f6UrR"
1573595062832	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1573595062832	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1573595062833	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1573595062833	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1573595067065	Marionette	INFO	Listening on port 43393
1573595067143	Marionette	WARN	TLS certificate errors will be ignored for this session
SourceActor threw an exception: [Exception... "Failed to open input source 'file:///'"  nsresult: "0x80520015 (NS_ERROR_FILE_ACCESS_DENIED)"  location: "JS frame :: resource://devtools/shared/DevToolsUtils.js :: mainThreadFetch/< :: line 678"  data: yes]
Stack: mainThreadFetch/<@resource://devtools/shared/DevToolsUtils.js:678:15
mainThreadFetch@resource://devtools/shared/DevToolsUtils.js:530:10
_fetchURLContents@resource://devtools/server/actors/utils/TabSources.js:580:22
urlContents@resource://devtools/server/actors/utils/TabSources.js:547:17
_resurrectSource@resource://devtools/server/actors/thread.js:2033:69
addAllSources@resource://devtools/server/actors/thread.js:1334:14
onSources@resource://devtools/server/actors/thread.js:1340:10
onPacket@resource://devtools/server/debugger-server-connection.js:378:58
receiveMessage@resource://devtools/shared/transport/child-transport.js:66:16
Line: 678, column: 0
JavaScript error: resource://devtools/shared/DevToolsUtils.js, line 678: NS_ERROR_FILE_ACCESS_DENIED: Failed to open input source 'file:///'
1573595167249	mozrunner::runner	INFO	Running command: "/usr/bin/firefox" "-marionette" "-foreground" "-no-remote" "-profile" "/tmp/rust_mozprofile.wohSDIImOVI1"
1573595168311	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1573595168311	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1573595168312	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1573595168312	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)

IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)

1573595171022	Marionette	INFO	Stopped listening on port 43393
1573595172999	Marionette	INFO	Listening on port 40005
1573595173077	Marionette	WARN	TLS certificate errors will be ignored for this session
SourceActor threw an exception: [Exception... "Failed to open input source 'file:///'"  nsresult: "0x80520015 (NS_ERROR_FILE_ACCESS_DENIED)"  location: "JS frame :: resource://devtools/shared/DevToolsUtils.js :: mainThreadFetch/< :: line 678"  data: yes]
Stack: mainThreadFetch/<@resource://devtools/shared/DevToolsUtils.js:678:15
mainThreadFetch@resource://devtools/shared/DevToolsUtils.js:530:10
_fetchURLContents@resource://devtools/server/actors/utils/TabSources.js:580:22
urlContents@resource://devtools/server/actors/utils/TabSources.js:547:17
_resurrectSource@resource://devtools/server/actors/thread.js:2033:69
addAllSources@resource://devtools/server/actors/thread.js:1334:14
onSources@resource://devtools/server/actors/thread.js:1340:10
onPacket@resource://devtools/server/debugger-server-connection.js:378:58
receiveMessage@resource://devtools/shared/transport/child-transport.js:66:16
Line: 678, column: 0
JavaScript error: resource://devtools/shared/DevToolsUtils.js, line 678: NS_ERROR_FILE_ACCESS_DENIED: Failed to open input source 'file:///'
1573595303812	mozrunner::runner	INFO	Running command: "/usr/bin/firefox" "-marionette" "-foreground" "-no-remote" "-profile" "/tmp/rust_mozprofile.NcZ6hHLOKsMI"
1573595304987	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1573595304987	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1573595304987	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1573595304988	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1573595309421	Marionette	INFO	Listening on port 45217
1573595309446	Marionette	WARN	TLS certificate errors will be ignored for this session
1573595335554	Marionette	WARN	TimedPromise timed out after 500 ms: stacktrace:
bail@chrome://marionette/content/sync.js:237:64
SourceActor threw an exception: [Exception... "Failed to open input source 'file:///'"  nsresult: "0x80520015 (NS_ERROR_FILE_ACCESS_DENIED)"  location: "JS frame :: resource://devtools/shared/DevToolsUtils.js :: mainThreadFetch/< :: line 678"  data: yes]
Stack: mainThreadFetch/<@resource://devtools/shared/DevToolsUtils.js:678:15
mainThreadFetch@resource://devtools/shared/DevToolsUtils.js:530:10
_fetchURLContents@resource://devtools/server/actors/utils/TabSources.js:580:22
urlContents@resource://devtools/server/actors/utils/TabSources.js:547:17
_resurrectSource@resource://devtools/server/actors/thread.js:2033:69
addAllSources@resource://devtools/server/actors/thread.js:1334:14
onSources@resource://devtools/server/actors/thread.js:1340:10
onPacket@resource://devtools/server/debugger-server-connection.js:378:58
receiveMessage@resource://devtools/shared/transport/child-transport.js:66:16
Line: 678, column: 0
JavaScript error: resource://devtools/shared/DevToolsUtils.js, line 678: NS_ERROR_FILE_ACCESS_DENIED: Failed to open input source 'file:///'
[Parent 32212, Gecko_IOThread] WARNING: pipe error (68): Connection reset by peer: file /build/firefox-hE9N0Y/firefox-70.0.1+build1/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 358
IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)

IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)

IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)

IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)


###!!! [Child][RunMessage] Error: Channel closing: too late to send/recv, messages will be lost

1573595406297	Marionette	INFO	Stopped listening on port 45217
[Parent 31928, Gecko_IOThread] WARNING: pipe error (68): Connection reset by peer: file /build/firefox-hE9N0Y/firefox-70.0.1+build1/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 358
IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)

IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)

1573595415431	Marionette	INFO	Stopped listening on port 40005
IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)

IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)

JavaScript error: , line 0: UnknownError: The operation failed for reasons unrelated to the database itself and not covered by any other error code.
1573595418907	Marionette	INFO	Stopped listening on port 41189
1573595448248	mozrunner::runner	INFO	Running command: "/usr/bin/firefox" "-marionette" "-foreground" "-no-remote" "-profile" "/tmp/rust_mozprofile.xsN894fX7wec"
1573595449718	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1573595449718	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1573595449719	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1573595449719	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1573595454699	Marionette	INFO	Listening on port 44601
1573595454807	Marionette	WARN	TLS certificate errors will be ignored for this session
1573595480633	Marionette	WARN	TimedPromise timed out after 500 ms: stacktrace:
bail@chrome://marionette/content/sync.js:237:64
1573595731420	mozrunner::runner	INFO	Running command: "/usr/bin/firefox" "-marionette" "-foreground" "-no-remote" "-profile" "/tmp/rust_mozprofile.nICkD62RiABR"
1573595732386	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1573595732386	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1573595732387	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1573595732387	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1573595736983	Marionette	INFO	Listening on port 41681
1573595737048	Marionette	WARN	TLS certificate errors will be ignored for this session

###!!! [Child][RunMessage] Error: Channel closing: too late to send/recv, messages will be lost

[Parent 32513, Gecko_IOThread] WARNING: pipe error (93): Connection reset by peer: file /build/firefox-hE9N0Y/firefox-70.0.1+build1/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 358
JavaScript error: , line 0: UnknownError: The operation failed for reasons unrelated to the database itself and not covered by any other error code.
1573595745094	Marionette	INFO	Stopped listening on port 44601
1573595783739	mozrunner::runner	INFO	Running command: "/usr/bin/firefox" "-marionette" "-foreground" "-no-remote" "-profile" "/tmp/rust_mozprofile.axxdcdiIGRgh"
1573595784740	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1573595784740	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1573595784741	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1573595784741	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1573595789136	Marionette	INFO	Listening on port 34567
1573595789180	Marionette	WARN	TLS certificate errors will be ignored for this session
1573595803321	mozrunner::runner	INFO	Running command: "/usr/bin/firefox" "-marionette" "-foreground" "-no-remote" "-profile" "/tmp/rust_mozprofile.bfksBjObDAk2"
1573595804232	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1573595804232	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1573595804232	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1573595804232	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
[Parent 770, Gecko_IOThread] WARNING: pipe error (145): Connection reset by peer: file /build/firefox-hE9N0Y/firefox-70.0.1+build1/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 358
1573595808804	Marionette	INFO	Listening on port 37611
1573595808841	Marionette	WARN	TLS certificate errors will be ignored for this session
1573595814311	Marionette	INFO	Stopped listening on port 34567
IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)

[Parent 548, Gecko_IOThread] WARNING: pipe error (76): Connection reset by peer: file /build/firefox-hE9N0Y/firefox-70.0.1+build1/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 358
JavaScript error: , line 0: UnknownError: The operation failed for reasons unrelated to the database itself and not covered by any other error code.
1573595819296	Marionette	INFO	Stopped listening on port 41681
[Parent 963, Gecko_IOThread] WARNING: pipe error (68): Connection reset by peer: file /build/firefox-hE9N0Y/firefox-70.0.1+build1/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 358
[Parent 963, Gecko_IOThread] WARNING: pipe error (92): Connection reset by peer: file /build/firefox-hE9N0Y/firefox-70.0.1+build1/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 358
[Parent 963, Gecko_IOThread] WARNING: pipe error (143): Connection reset by peer: file /build/firefox-hE9N0Y/firefox-70.0.1+build1/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 358
JavaScript error: , line 0: UnknownError: The operation failed for reasons unrelated to the database itself and not covered by any other error code.
1573595892477	Marionette	INFO	Stopped listening on port 37611
1573595905061	mozrunner::runner	INFO	Running command: "/usr/bin/firefox" "-marionette" "-foreground" "-no-remote" "-profile" "/tmp/rust_mozprofile.WpuHvajVQ7qT"
1573595905963	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1573595905963	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1573595905964	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1573595905964	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1573595910163	Marionette	INFO	Listening on port 43817
1573595910188	Marionette	WARN	TLS certificate errors will be ignored for this session
1573595941743	Marionette	WARN	TimedPromise timed out after 500 ms: stacktrace:
bail@chrome://marionette/content/sync.js:237:64
1573596059457	mozrunner::runner	INFO	Running command: "/usr/bin/firefox" "-marionette" "-foreground" "-no-remote" "-profile" "/tmp/rust_mozprofile.4rAdjA1o1rGx"
1573596060428	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1573596060428	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1573596060429	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1573596060429	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1573596065044	Marionette	INFO	Listening on port 41323
1573596065093	Marionette	WARN	TLS certificate errors will be ignored for this session
Exiting due to channel error.
[GFX1-]: Receive IPC close with reason=AbnormalShutdown
[GFX1-]: Receive IPC close with reason=AbnormalShutdown
[Child 1641, Chrome_ChildThread] WARNING: pipe error: Broken pipe: file /build/firefox-hE9N0Y/firefox-70.0.1+build1/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 728
[Child 1621, Chrome_ChildThread] WARNING: pipe error (3): Connection reset by peer: file /build/firefox-hE9N0Y/firefox-70.0.1+build1/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 358
Exiting due to channel error.
Exiting due to channel error.
[Parent 1300, Gecko_IOThread] WARNING: pipe error (68): Connection reset by peer: file /build/firefox-hE9N0Y/firefox-70.0.1+build1/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 358
[Parent 1300, Gecko_IOThread] WARNING: pipe error (104): Connection reset by peer: file /build/firefox-hE9N0Y/firefox-70.0.1+build1/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 358
JavaScript error: , line 0: UnknownError: The operation failed for reasons unrelated to the database itself and not covered by any other error code.
1573596153212	Marionette	INFO	Stopped listening on port 43817
1573596154447	mozrunner::runner	INFO	Running command: "/usr/bin/firefox" "-marionette" "-foreground" "-no-remote" "-profile" "/tmp/rust_mozprofile.WVnAZdO11Bfd"
1573596155360	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1573596155360	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1573596155361	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1573596155361	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1573596159661	Marionette	INFO	Listening on port 43843
1573596159688	Marionette	WARN	TLS certificate errors will be ignored for this session
1573596186316	Marionette	WARN	TimedPromise timed out after 500 ms: stacktrace:
bail@chrome://marionette/content/sync.js:237:64
Exiting due to channel error.
Exiting due to channel error.
Exiting due to channel error.
1573596251868	mozrunner::runner	INFO	Running command: "/usr/bin/firefox" "-marionette" "-foreground" "-no-remote" "-profile" "/tmp/rust_mozprofile.Gjr4N5TXf7Dh"
1573596252890	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1573596252891	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1573596252891	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1573596252892	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1573596257221	Marionette	INFO	Listening on port 34745
1573596257288	Marionette	WARN	TLS certificate errors will be ignored for this session
Exiting due to channel error.
Exiting due to channel error.
[GFX1-]: Receive IPC close with reason=AbnormalShutdown
[Child 2169, Chrome_ChildThread] WARNING: pipe error (3): Connection reset by peer: file /build/firefox-hE9N0Y/firefox-70.0.1+build1/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 358
Exiting due to channel error.
1573596362295	mozrunner::runner	INFO	Running command: "/usr/bin/firefox" "-marionette" "-foreground" "-no-remote" "-profile" "/tmp/rust_mozprofile.KzeqEF18v4c9"
1573596363268	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1573596363268	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1573596363269	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1573596363269	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1573596367595	Marionette	INFO	Listening on port 44385
1573596367615	Marionette	WARN	TLS certificate errors will be ignored for this session
1573596374960	mozrunner::runner	INFO	Running command: "/usr/bin/firefox" "-marionette" "-foreground" "-no-remote" "-profile" "/tmp/rust_mozprofile.Vudq4lMof711"
1573596375924	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1573596375924	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1573596375925	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1573596375925	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1573596378351	Marionette	INFO	Stopped listening on port 44385
1573596381137	Marionette	INFO	Listening on port 41185
1573596381192	Marionette	WARN	TLS certificate errors will be ignored for this session
JavaScript error: resource://gre/modules/UrlClassifierListManager.jsm, line 680: TypeError: this.tablesData[table] is undefined
1573596390555	mozrunner::runner	INFO	Running command: "/usr/bin/firefox" "-marionette" "-foreground" "-no-remote" "-profile" "/tmp/rust_mozprofile.2U6UIvpo7JsN"
1573596391795	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1573596391795	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1573596391796	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1573596391796	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1573596393254	Marionette	INFO	Stopped listening on port 41185
1573596396475	Marionette	INFO	Listening on port 35931
1573596396580	Marionette	WARN	TLS certificate errors will be ignored for this session
1573596422837	Marionette	WARN	TimedPromise timed out after 500 ms: stacktrace:
bail@chrome://marionette/content/sync.js:237:64
SourceActor threw an exception: [Exception... "Failed to open input source 'file:///'"  nsresult: "0x80520015 (NS_ERROR_FILE_ACCESS_DENIED)"  location: "JS frame :: resource://devtools/shared/DevToolsUtils.js :: mainThreadFetch/< :: line 678"  data: yes]
Stack: mainThreadFetch/<@resource://devtools/shared/DevToolsUtils.js:678:15
mainThreadFetch@resource://devtools/shared/DevToolsUtils.js:530:10
_fetchURLContents@resource://devtools/server/actors/utils/TabSources.js:580:22
urlContents@resource://devtools/server/actors/utils/TabSources.js:547:17
_resurrectSource@resource://devtools/server/actors/thread.js:2033:69
addAllSources@resource://devtools/server/actors/thread.js:1334:14
onSources@resource://devtools/server/actors/thread.js:1340:10
onPacket@resource://devtools/server/debugger-server-connection.js:378:58
receiveMessage@resource://devtools/shared/transport/child-transport.js:66:16
Line: 678, column: 0
JavaScript error: resource://devtools/shared/DevToolsUtils.js, line 678: NS_ERROR_FILE_ACCESS_DENIED: Failed to open input source 'file:///'
1573596594997	mozrunner::runner	INFO	Running command: "/usr/bin/firefox" "-marionette" "-foreground" "-no-remote" "-profile" "/tmp/rust_mozprofile.Riy0Tluz6aRE"
1573596595966	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1573596595966	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1573596595966	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1573596595966	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1573596600201	Marionette	INFO	Listening on port 41115
1573596600222	Marionette	WARN	TLS certificate errors will be ignored for this session
1573596638859	Marionette	INFO	Stopped listening on port 41115
IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)

[Parent 3256, Gecko_IOThread] WARNING: pipe error (170): Connection reset by peer: file /build/firefox-hE9N0Y/firefox-70.0.1+build1/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 358
1573596669757	mozrunner::runner	INFO	Running command: "/usr/bin/firefox" "-marionette" "-foreground" "-no-remote" "-profile" "/tmp/rust_mozprofile.QPlZuX1oTdie"
1573596670670	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1573596670671	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1573596670671	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1573596670671	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1573596675055	Marionette	INFO	Listening on port 40277
1573596675079	Marionette	WARN	TLS certificate errors will be ignored for this session
1573596705340	Marionette	WARN	TimedPromise timed out after 500 ms: stacktrace:
bail@chrome://marionette/content/sync.js:237:64
1573596740585	mozrunner::runner	INFO	Running command: "/usr/bin/firefox" "-marionette" "-foreground" "-no-remote" "-profile" "/tmp/rust_mozprofile.zdoKHXVSg7jH"
1573596741548	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1573596741548	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1573596741549	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1573596741549	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1573596745822	Marionette	INFO	Listening on port 44955
1573596745905	Marionette	WARN	TLS certificate errors will be ignored for this session

###!!! [Child][MessageChannel] Error: (msgtype=0x570012,name=PHttpChannel::Msg___delete__) Channel closing: too late to send/recv, messages will be lost

[Parent 3478, Gecko_IOThread] WARNING: pipe error (76): Connection reset by peer: file /build/firefox-hE9N0Y/firefox-70.0.1+build1/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 358
[Parent 3478, Gecko_IOThread] WARNING: pipe error (79): Connection reset by peer: file /build/firefox-hE9N0Y/firefox-70.0.1+build1/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 358
[Parent 3478, Gecko_IOThread] WARNING: pipe error (142): Connection reset by peer: file /build/firefox-hE9N0Y/firefox-70.0.1+build1/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 358
JavaScript error: , line 0: UnknownError: The operation failed for reasons unrelated to the database itself and not covered by any other error code.
1573596754947	Marionette	INFO	Stopped listening on port 40277
1573596772921	Marionette	WARN	TimedPromise timed out after 500 ms: stacktrace:
bail@chrome://marionette/content/sync.js:237:64
JavaScript error: , line 0: AbortError: A request was aborted, for example through a call to IDBTransaction.abort.
1573596823138	Marionette	INFO	Stopped listening on port 44955
IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)

IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)

JavaScript error: , line 0: UnknownError: The operation failed for reasons unrelated to the database itself and not covered by any other error code.
1573596827932	Marionette	INFO	Stopped listening on port 35931
1573699930582	mozrunner::runner	INFO	Running command: "/usr/bin/firefox" "-marionette" "-foreground" "-no-remote" "-profile" "/tmp/rust_mozprofile.ta64heK4O3BQ"
1573699936800	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1573699936800	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1573699936801	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1573699936801	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1573699946535	Marionette	INFO	Listening on port 38967
1573699946945	Marionette	WARN	TLS certificate errors will be ignored for this session
1573699976862	Marionette	WARN	TimedPromise timed out after 500 ms: stacktrace:
bail@chrome://marionette/content/sync.js:237:64

###!!! [Child][RunMessage] Error: Channel closing: too late to send/recv, messages will be lost


###!!! [Child][RunMessage] Error: Channel closing: too late to send/recv, messages will be lost

[Parent 22391, Gecko_IOThread] WARNING: pipe error (71): Connection reset by peer: file /build/firefox-hE9N0Y/firefox-70.0.1+build1/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 358
1573701033296	Marionette	INFO	Stopped listening on port 38967
1573701351820	mozrunner::runner	INFO	Running command: "/usr/bin/firefox" "-marionette" "-foreground" "-no-remote" "-profile" "/tmp/rust_mozprofile.6pABDPPOgV0X"
1573701352816	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1573701352816	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1573701352817	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1573701352817	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1573701357202	Marionette	INFO	Listening on port 34107
1573701357243	Marionette	WARN	TLS certificate errors will be ignored for this session
JavaScript error: https://static.xx.fbcdn.net/rsrc.php/v3/yR/r/rKQzd5lOgbR.js?_nc_x=3vjgpNIURrx, line 154: Error: Destroyed!
JavaScript error: https://static.xx.fbcdn.net/rsrc.php/v3/yR/r/rKQzd5lOgbR.js?_nc_x=3vjgpNIURrx, line 154: Error: Destroyed!
1573701389235	Marionette	WARN	TimedPromise timed out after 500 ms: stacktrace:
bail@chrome://marionette/content/sync.js:237:64
IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)

1573701417644	Marionette	INFO	Stopped listening on port 34107
1573702290503	mozrunner::runner	INFO	Running command: "/usr/bin/firefox" "-marionette" "-foreground" "-no-remote" "-profile" "/tmp/rust_mozprofile.kgVDogxFLqia"
1573702291569	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1573702291569	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1573702291569	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1573702291570	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1573702295743	Marionette	INFO	Listening on port 34371
1573702295824	Marionette	WARN	TLS certificate errors will be ignored for this session
JavaScript error: https://static.xx.fbcdn.net/rsrc.php/v3/yR/r/rKQzd5lOgbR.js?_nc_x=3vjgpNIURrx, line 154: Error: Destroyed!
JavaScript error: https://static.xx.fbcdn.net/rsrc.php/v3/yR/r/rKQzd5lOgbR.js?_nc_x=3vjgpNIURrx, line 154: Error: Destroyed!
JavaScript error: https://static.xx.fbcdn.net/rsrc.php/v3/yR/r/rKQzd5lOgbR.js?_nc_x=3vjgpNIURrx, line 154: Error: Destroyed!
1573702327067	Marionette	WARN	TimedPromise timed out after 500 ms: stacktrace:
bail@chrome://marionette/content/sync.js:237:64
1573702366172	mozrunner::runner	INFO	Running command: "/usr/bin/firefox" "-marionette" "-foreground" "-no-remote" "-profile" "/tmp/rust_mozprofile.rFTA5I6acbl3"
1573702367161	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1573702367162	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1573702367162	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1573702367162	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1573702372152	Marionette	INFO	Listening on port 46565
1573702372208	Marionette	WARN	TLS certificate errors will be ignored for this session
JavaScript error: https://static.xx.fbcdn.net/rsrc.php/v3/yR/r/rKQzd5lOgbR.js?_nc_x=3vjgpNIURrx, line 154: Error: Destroyed!
JavaScript error: https://static.xx.fbcdn.net/rsrc.php/v3/yR/r/rKQzd5lOgbR.js?_nc_x=3vjgpNIURrx, line 154: Error: Destroyed!
JavaScript error: https://static.xx.fbcdn.net/rsrc.php/v3/yR/r/rKQzd5lOgbR.js?_nc_x=3vjgpNIURrx, line 154: Error: Destroyed!
1573702406064	Marionette	WARN	TimedPromise timed out after 500 ms: stacktrace:
bail@chrome://marionette/content/sync.js:237:64
1573702435653	mozrunner::runner	INFO	Running command: "/usr/bin/firefox" "-marionette" "-foreground" "-no-remote" "-profile" "/tmp/rust_mozprofile.oYlrhCguSvl4"
1573702436676	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1573702436676	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1573702436676	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1573702436677	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1573702441304	Marionette	INFO	Listening on port 33141
1573702441378	Marionette	WARN	TLS certificate errors will be ignored for this session
JavaScript error: https://static.xx.fbcdn.net/rsrc.php/v3/yR/r/rKQzd5lOgbR.js?_nc_x=3vjgpNIURrx, line 154: Error: Destroyed!
JavaScript error: https://static.xx.fbcdn.net/rsrc.php/v3/yR/r/rKQzd5lOgbR.js?_nc_x=3vjgpNIURrx, line 154: Error: Destroyed!
JavaScript error: , line 0: UnknownError: The operation failed for reasons unrelated to the database itself and not covered by any other error code.
1573702530614	Marionette	INFO	Stopped listening on port 33141

###!!! [Child][RunMessage] Error: Channel closing: too late to send/recv, messages will be lost


###!!! [Child][RunMessage] Error: Channel closing: too late to send/recv, messages will be lost

[Parent 24629, Gecko_IOThread] WARNING: pipe error (81): Connection reset by peer: file /build/firefox-hE9N0Y/firefox-70.0.1+build1/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 358
1573702531625	Marionette	INFO	Stopped listening on port 46565
IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)

JavaScript error: , line 0: UnknownError: The operation failed for reasons unrelated to the database itself and not covered by any other error code.
1573702533271	Marionette	INFO	Stopped listening on port 34371
1573702536939	mozrunner::runner	INFO	Running command: "/usr/bin/firefox" "-marionette" "-foreground" "-no-remote" "-profile" "/tmp/rust_mozprofile.zd5MH2UXSLgU"
1573702538475	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1573702538476	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1573702538476	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1573702538477	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1573702543307	Marionette	INFO	Listening on port 39973
1573702543368	Marionette	WARN	TLS certificate errors will be ignored for this session
JavaScript error: https://static.xx.fbcdn.net/rsrc.php/v3/yR/r/rKQzd5lOgbR.js?_nc_x=3vjgpNIURrx, line 154: Error: Destroyed!
JavaScript error: https://static.xx.fbcdn.net/rsrc.php/v3/yR/r/rKQzd5lOgbR.js?_nc_x=3vjgpNIURrx, line 154: Error: Destroyed!
JavaScript error: https://static.xx.fbcdn.net/rsrc.php/v3/yR/r/rKQzd5lOgbR.js?_nc_x=3vjgpNIURrx, line 154: Error: Destroyed!
1573702604427	mozrunner::runner	INFO	Running command: "/usr/bin/firefox" "-marionette" "-foreground" "-no-remote" "-profile" "/tmp/rust_mozprofile.v7Gp0o9qGKoG"
1573702605374	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1573702605374	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1573702605374	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1573702605375	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1573702610032	Marionette	INFO	Listening on port 41701
1573702610053	Marionette	WARN	TLS certificate errors will be ignored for this session
[Parent 25441, Gecko_IOThread] WARNING: pipe error (129): Connection reset by peer: file /build/firefox-hE9N0Y/firefox-70.0.1+build1/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 358
1573702618790	mozrunner::runner	INFO	Running command: "/usr/bin/firefox" "-marionette" "-foreground" "-no-remote" "-profile" "/tmp/rust_mozprofile.uxEoCMXJyfIf"
1573702620044	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1573702620044	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1573702620045	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1573702620045	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1573702623003	Marionette	INFO	Stopped listening on port 41701
1573702625427	Marionette	INFO	Listening on port 39939
1573702625512	Marionette	WARN	TLS certificate errors will be ignored for this session
1573702627550	Marionette	INFO	Stopped listening on port 39973
JavaScript error: https://static.xx.fbcdn.net/rsrc.php/v3/yR/r/rKQzd5lOgbR.js?_nc_x=3vjgpNIURrx, line 154: Error: Destroyed!
JavaScript error: https://static.xx.fbcdn.net/rsrc.php/v3/yR/r/rKQzd5lOgbR.js?_nc_x=3vjgpNIURrx, line 154: Error: Destroyed!
1573702656457	Marionette	WARN	TimedPromise timed out after 500 ms: stacktrace:
bail@chrome://marionette/content/sync.js:237:64
1573702659103	Marionette	WARN	TimedPromise timed out after 500 ms: stacktrace:
bail@chrome://marionette/content/sync.js:237:64
1573702664248	Marionette	WARN	TimedPromise timed out after 0 ms: stacktrace:
bail@chrome://marionette/content/sync.js:237:64
IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)

[Parent 25632, Gecko_IOThread] WARNING: pipe error (82): Connection reset by peer: file /build/firefox-hE9N0Y/firefox-70.0.1+build1/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 358
JavaScript error: , line 0: UnknownError: The operation failed for reasons unrelated to the database itself and not covered by any other error code.
1573702704799	Marionette	INFO	Stopped listening on port 39939
1573702742442	mozrunner::runner	INFO	Running command: "/usr/bin/firefox" "-marionette" "-foreground" "-no-remote" "-profile" "/tmp/rust_mozprofile.mN4PahSlGWPD"
1573702743339	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1573702743340	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1573702743340	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1573702743340	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1573702747715	Marionette	INFO	Listening on port 40335
1573702747771	Marionette	WARN	TLS certificate errors will be ignored for this session
JavaScript error: https://static.xx.fbcdn.net/rsrc.php/v3/yR/r/rKQzd5lOgbR.js?_nc_x=3vjgpNIURrx, line 154: Error: Destroyed!
JavaScript error: https://static.xx.fbcdn.net/rsrc.php/v3/yR/r/rKQzd5lOgbR.js?_nc_x=3vjgpNIURrx, line 154: Error: Destroyed!
1573702778891	Marionette	WARN	TimedPromise timed out after 500 ms: stacktrace:
bail@chrome://marionette/content/sync.js:237:64
1573702781443	Marionette	WARN	TimedPromise timed out after 500 ms: stacktrace:
bail@chrome://marionette/content/sync.js:237:64
1573702842216	mozrunner::runner	INFO	Running command: "/usr/bin/firefox" "-marionette" "-foreground" "-no-remote" "-profile" "/tmp/rust_mozprofile.TrILAwcf9BB1"
1573702843183	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1573702843184	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1573702843184	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1573702843185	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1573702847674	Marionette	INFO	Listening on port 44341
1573702847737	Marionette	WARN	TLS certificate errors will be ignored for this session
JavaScript error: https://static.xx.fbcdn.net/rsrc.php/v3/yR/r/rKQzd5lOgbR.js?_nc_x=3vjgpNIURrx, line 154: Error: Destroyed!
JavaScript error: https://static.xx.fbcdn.net/rsrc.php/v3/yR/r/rKQzd5lOgbR.js?_nc_x=3vjgpNIURrx, line 154: Error: Destroyed!
1573702875387	Marionette	WARN	TimedPromise timed out after 500 ms: stacktrace:
bail@chrome://marionette/content/sync.js:237:64
SourceActor threw an exception: [Exception... "Failed to open input source 'file:///'"  nsresult: "0x80520015 (NS_ERROR_FILE_ACCESS_DENIED)"  location: "JS frame :: resource://devtools/shared/DevToolsUtils.js :: mainThreadFetch/< :: line 678"  data: yes]
Stack: mainThreadFetch/<@resource://devtools/shared/DevToolsUtils.js:678:15
mainThreadFetch@resource://devtools/shared/DevToolsUtils.js:530:10
_fetchURLContents@resource://devtools/server/actors/utils/TabSources.js:580:22
urlContents@resource://devtools/server/actors/utils/TabSources.js:547:17
_resurrectSource@resource://devtools/server/actors/thread.js:2033:69
addAllSources@resource://devtools/server/actors/thread.js:1334:14
onSources@resource://devtools/server/actors/thread.js:1340:10
onPacket@resource://devtools/server/debugger-server-connection.js:378:58
receiveMessage@resource://devtools/shared/transport/child-transport.js:66:16
Line: 678, column: 0
JavaScript error: resource://devtools/shared/DevToolsUtils.js, line 678: NS_ERROR_FILE_ACCESS_DENIED: Failed to open input source 'file:///'
[Parent 26233, Gecko_IOThread] WARNING: pipe error (68): Connection reset by peer: file /build/firefox-hE9N0Y/firefox-70.0.1+build1/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 358
IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)

IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)

1573703164790	Marionette	INFO	Stopped listening on port 44341
[Parent 25966, Gecko_IOThread] WARNING: pipe error (68): Connection reset by peer: file /build/firefox-hE9N0Y/firefox-70.0.1+build1/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 358
IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)

1573703167837	Marionette	INFO	Stopped listening on port 40335
1573703182180	mozrunner::runner	INFO	Running command: "/usr/bin/firefox" "-marionette" "-foreground" "-no-remote" "-profile" "/tmp/rust_mozprofile.BotE65x8juo8"
1573703183111	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1573703183111	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1573703183111	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1573703183112	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1573703187961	Marionette	INFO	Listening on port 40575
1573703188004	Marionette	WARN	TLS certificate errors will be ignored for this session
JavaScript error: https://static.xx.fbcdn.net/rsrc.php/v3/yR/r/rKQzd5lOgbR.js?_nc_x=3vjgpNIURrx, line 154: Error: Destroyed!
JavaScript error: https://static.xx.fbcdn.net/rsrc.php/v3/yR/r/rKQzd5lOgbR.js?_nc_x=3vjgpNIURrx, line 154: Error: Destroyed!
JavaScript error: https://static.xx.fbcdn.net/rsrc.php/v3/yR/r/rKQzd5lOgbR.js?_nc_x=3vjgpNIURrx, line 154: Error: Destroyed!
IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)


###!!! [Child][RunMessage] Error: Channel closing: too late to send/recv, messages will be lost

1573703256910	Marionette	INFO	Stopped listening on port 40575
1573703417900	mozrunner::runner	INFO	Running command: "/usr/bin/firefox" "-marionette" "-foreground" "-no-remote" "-profile" "/tmp/rust_mozprofile.luN4rkTu2ymd"
1573703418818	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1573703418818	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1573703418819	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1573703418819	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1573703423158	Marionette	INFO	Listening on port 35143
1573703423216	Marionette	WARN	TLS certificate errors will be ignored for this session
SourceActor threw an exception: [Exception... "Failed to open input source 'file:///'"  nsresult: "0x80520015 (NS_ERROR_FILE_ACCESS_DENIED)"  location: "JS frame :: resource://devtools/shared/DevToolsUtils.js :: mainThreadFetch/< :: line 678"  data: yes]
Stack: mainThreadFetch/<@resource://devtools/shared/DevToolsUtils.js:678:15
mainThreadFetch@resource://devtools/shared/DevToolsUtils.js:530:10
_fetchURLContents@resource://devtools/server/actors/utils/TabSources.js:580:22
urlContents@resource://devtools/server/actors/utils/TabSources.js:547:17
_resurrectSource@resource://devtools/server/actors/thread.js:2033:69
addAllSources@resource://devtools/server/actors/thread.js:1334:14
onSources@resource://devtools/server/actors/thread.js:1340:10
onPacket@resource://devtools/server/debugger-server-connection.js:378:58
receiveMessage@resource://devtools/shared/transport/child-transport.js:66:16
Line: 678, column: 0
JavaScript error: resource://devtools/shared/DevToolsUtils.js, line 678: NS_ERROR_FILE_ACCESS_DENIED: Failed to open input source 'file:///'
[Parent 27032, Gecko_IOThread] WARNING: pipe error (79): Connection reset by peer: file /build/firefox-hE9N0Y/firefox-70.0.1+build1/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 358
[Parent 27032, Gecko_IOThread] WARNING: pipe error (56): Connection reset by peer: file /build/firefox-hE9N0Y/firefox-70.0.1+build1/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 358
1573703510333	Marionette	INFO	Stopped listening on port 35143
1573703519469	mozrunner::runner	INFO	Running command: "/usr/bin/firefox" "-marionette" "-foreground" "-no-remote" "-profile" "/tmp/rust_mozprofile.2rmgdmfcAN1I"
1573703520410	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1573703520410	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1573703520410	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1573703520411	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1573703524792	Marionette	INFO	Listening on port 41859
1573703524890	Marionette	WARN	TLS certificate errors will be ignored for this session
JavaScript error: https://static.xx.fbcdn.net/rsrc.php/v3/yR/r/rKQzd5lOgbR.js?_nc_x=3vjgpNIURrx, line 154: Error: Destroyed!
JavaScript error: https://static.xx.fbcdn.net/rsrc.php/v3/yR/r/rKQzd5lOgbR.js?_nc_x=3vjgpNIURrx, line 154: Error: Destroyed!
1573703558695	Marionette	WARN	TimedPromise timed out after 500 ms: stacktrace:
bail@chrome://marionette/content/sync.js:237:64
1573703565537	Marionette	WARN	TimedPromise timed out after 0 ms: stacktrace:
bail@chrome://marionette/content/sync.js:237:64
[Parent 27447, Gecko_IOThread] WARNING: pipe error (100): Connection reset by peer: file /build/firefox-hE9N0Y/firefox-70.0.1+build1/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 358
[Parent 27447, Gecko_IOThread] WARNING: pipe error (129): Connection reset by peer: file /build/firefox-hE9N0Y/firefox-70.0.1+build1/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 358
1573703721086	Marionette	INFO	Stopped listening on port 41859
1573703724477	mozrunner::runner	INFO	Running command: "/usr/bin/firefox" "-marionette" "-foreground" "-no-remote" "-profile" "/tmp/rust_mozprofile.Hf2qtXACCBYc"
1573703725500	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1573703725501	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1573703725501	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1573703725501	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1573703729739	Marionette	INFO	Listening on port 37047
1573703729797	Marionette	WARN	TLS certificate errors will be ignored for this session
JavaScript error: https://static.xx.fbcdn.net/rsrc.php/v3/yR/r/rKQzd5lOgbR.js?_nc_x=3vjgpNIURrx, line 154: Error: Destroyed!
JavaScript error: https://static.xx.fbcdn.net/rsrc.php/v3/yR/r/rKQzd5lOgbR.js?_nc_x=3vjgpNIURrx, line 154: Error: Destroyed!
1573703769201	Marionette	WARN	TimedPromise timed out after 0 ms: stacktrace:
bail@chrome://marionette/content/sync.js:237:64
1573703800154	Marionette	INFO	Stopped listening on port 37047
1573703986334	mozrunner::runner	INFO	Running command: "/usr/bin/firefox" "-marionette" "-foreground" "-no-remote" "-profile" "/tmp/rust_mozprofile.jRBFbtVLvT1Y"
1573703987316	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1573703987316	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1573703987317	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1573703987317	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1573703991756	Marionette	INFO	Listening on port 33949
1573703991859	Marionette	WARN	TLS certificate errors will be ignored for this session
SourceActor threw an exception: [Exception... "Failed to open input source 'file:///'"  nsresult: "0x80520015 (NS_ERROR_FILE_ACCESS_DENIED)"  location: "JS frame :: resource://devtools/shared/DevToolsUtils.js :: mainThreadFetch/< :: line 678"  data: yes]
Stack: mainThreadFetch/<@resource://devtools/shared/DevToolsUtils.js:678:15
mainThreadFetch@resource://devtools/shared/DevToolsUtils.js:530:10
_fetchURLContents@resource://devtools/server/actors/utils/TabSources.js:580:22
urlContents@resource://devtools/server/actors/utils/TabSources.js:547:17
_resurrectSource@resource://devtools/server/actors/thread.js:2033:69
addAllSources@resource://devtools/server/actors/thread.js:1334:14
onSources@resource://devtools/server/actors/thread.js:1340:10
onPacket@resource://devtools/server/debugger-server-connection.js:378:58
receiveMessage@resource://devtools/shared/transport/child-transport.js:66:16
Line: 678, column: 0
JavaScript error: resource://devtools/shared/DevToolsUtils.js, line 678: NS_ERROR_FILE_ACCESS_DENIED: Failed to open input source 'file:///'
[Parent 28280, Gecko_IOThread] WARNING: pipe error (83): Connection reset by peer: file /build/firefox-hE9N0Y/firefox-70.0.1+build1/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 358
[Parent 28280, Gecko_IOThread] WARNING: pipe error (81): Connection reset by peer: file /build/firefox-hE9N0Y/firefox-70.0.1+build1/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 358
[Parent 28280, Gecko_IOThread] WARNING: pipe error (143): Connection reset by peer: file /build/firefox-hE9N0Y/firefox-70.0.1+build1/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 358
1573704141876	Marionette	INFO	Stopped listening on port 33949
1573704143647	mozrunner::runner	INFO	Running command: "/usr/bin/firefox" "-marionette" "-foreground" "-no-remote" "-profile" "/tmp/rust_mozprofile.cczDoXjvr8j3"
1573704144689	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1573704144689	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1573704144689	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1573704144689	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1573704149101	Marionette	INFO	Listening on port 33237
1573704149165	Marionette	WARN	TLS certificate errors will be ignored for this session
IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)


###!!! [Child][RunMessage] Error: Channel closing: too late to send/recv, messages will be lost


###!!! [Child][RunMessage] Error: Channel closing: too late to send/recv, messages will be lost

[Parent 28537, Gecko_IOThread] WARNING: pipe error (79): Connection reset by peer: file /build/firefox-hE9N0Y/firefox-70.0.1+build1/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 358
1573704247991	Marionette	INFO	Stopped listening on port 33237
1573704331258	mozrunner::runner	INFO	Running command: "/usr/bin/firefox" "-marionette" "-foreground" "-no-remote" "-profile" "/tmp/rust_mozprofile.0qrNcboCPxo4"
1573704332342	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1573704332343	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1573704332343	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1573704332344	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1573704336949	Marionette	INFO	Listening on port 42293
1573704336978	Marionette	WARN	TLS certificate errors will be ignored for this session
JavaScript error: https://static.xx.fbcdn.net/rsrc.php/v3/yR/r/rKQzd5lOgbR.js?_nc_x=3vjgpNIURrx, line 154: Error: Destroyed!
JavaScript error: https://static.xx.fbcdn.net/rsrc.php/v3/yR/r/rKQzd5lOgbR.js?_nc_x=3vjgpNIURrx, line 154: Error: Destroyed!
1573704368077	Marionette	WARN	TimedPromise timed out after 500 ms: stacktrace:
bail@chrome://marionette/content/sync.js:237:64
[Parent 28864, Gecko_IOThread] WARNING: pipe error (68): Connection reset by peer: file /build/firefox-hE9N0Y/firefox-70.0.1+build1/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 358
IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)

JavaScript error: , line 0: UnknownError: The operation failed for reasons unrelated to the database itself and not covered by any other error code.
1573704425504	Marionette	INFO	Stopped listening on port 42293
1573704461915	mozrunner::runner	INFO	Running command: "/usr/bin/firefox" "-marionette" "-foreground" "-no-remote" "-profile" "/tmp/rust_mozprofile.kaErtF3fC5Ys"
1573704462876	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1573704462876	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1573704462877	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1573704462877	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1573704467256	Marionette	INFO	Listening on port 40915
1573704467338	Marionette	WARN	TLS certificate errors will be ignored for this session
1573704498554	Marionette	WARN	TimedPromise timed out after 500 ms: stacktrace:
bail@chrome://marionette/content/sync.js:237:64
1573704570807	mozrunner::runner	INFO	Running command: "/usr/bin/firefox" "-marionette" "-foreground" "-no-remote" "-profile" "/tmp/rust_mozprofile.zmQFmCeImKPE"
1573704571704	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1573704571704	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1573704571705	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1573704571705	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1573704576120	Marionette	INFO	Listening on port 43037
1573704576136	Marionette	WARN	TLS certificate errors will be ignored for this session
JavaScript error: , line 0: UnknownError: The operation failed for reasons unrelated to the database itself and not covered by any other error code.
1573704583604	Marionette	INFO	Stopped listening on port 40915
1573704613799	Marionette	WARN	TimedPromise timed out after 500 ms: stacktrace:
bail@chrome://marionette/content/sync.js:237:64
IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)

JavaScript error: , line 0: UnknownError: The operation failed for reasons unrelated to the database itself and not covered by any other error code.
1573707976616	Marionette	INFO	Stopped listening on port 43037
1573725182927	mozrunner::runner	INFO	Running command: "/usr/bin/firefox" "-marionette" "-foreground" "-no-remote" "-profile" "/tmp/rust_mozprofile.yIfJFQyozEYQ"
1573725183805	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1573725183806	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1573725183806	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1573725183806	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1573725188003	Marionette	INFO	Listening on port 36723
1573725188082	Marionette	WARN	TLS certificate errors will be ignored for this session
1573725202700	Marionette	WARN	TimedPromise timed out after 500 ms: stacktrace:
bail@chrome://marionette/content/sync.js:237:64
1573725247304	Marionette	INFO	Stopped listening on port 36723
1573725298825	mozrunner::runner	INFO	Running command: "/usr/bin/firefox" "-marionette" "-foreground" "-no-remote" "-profile" "/tmp/rust_mozprofile.9BIpSERR9Zm9"
1573725299760	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1573725299760	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1573725299761	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1573725299761	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1573725303807	Marionette	INFO	Listening on port 35975
1573725303851	Marionette	WARN	TLS certificate errors will be ignored for this session
1573725322757	Marionette	WARN	TimedPromise timed out after 500 ms: stacktrace:
bail@chrome://marionette/content/sync.js:237:64
[Parent 7920, Gecko_IOThread] WARNING: pipe error (69): Connection reset by peer: file /build/firefox-hE9N0Y/firefox-70.0.1+build1/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 358
JavaScript error: , line 0: UnknownError: The operation failed for reasons unrelated to the database itself and not covered by any other error code.
1573725849865	Marionette	INFO	Stopped listening on port 35975
1573734562106	mozrunner::runner	INFO	Running command: "/usr/bin/firefox" "-marionette" "-foreground" "-no-remote" "-profile" "/tmp/rust_mozprofile.tUV7OCpLDkd8"
1573734564319	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1573734564319	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1573734564320	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1573734564320	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1573734571087	Marionette	INFO	Listening on port 45983
1573734571153	Marionette	WARN	TLS certificate errors will be ignored for this session
1573734637933	Marionette	WARN	TimedPromise timed out after 500 ms: stacktrace:
bail@chrome://marionette/content/sync.js:237:64

###!!! [Parent][RunMessage] Error: Channel closing: too late to send/recv, messages will be lost

IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)

1573734717954	Marionette	INFO	Stopped listening on port 45983
1573734754078	mozrunner::runner	INFO	Running command: "/usr/bin/firefox" "-marionette" "-foreground" "-no-remote" "-profile" "/tmp/rust_mozprofile.D15djwsSfEAF"
1573734756438	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1573734756439	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1573734756440	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1573734756440	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1573734763716	Marionette	INFO	Listening on port 34133
1573734763742	Marionette	WARN	TLS certificate errors will be ignored for this session
1573734819238	Marionette	WARN	TimedPromise timed out after 500 ms: stacktrace:
bail@chrome://marionette/content/sync.js:237:64
[Parent 11798, Gecko_IOThread] WARNING: pipe error (71): Connection reset by peer: file /build/firefox-hE9N0Y/firefox-70.0.1+build1/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 358
1573734913180	Marionette	INFO	Stopped listening on port 34133
1573736088346	mozrunner::runner	INFO	Running command: "/usr/bin/firefox" "-marionette" "-foreground" "-no-remote" "-profile" "/tmp/rust_mozprofile.qYqKQLGL0UB0"
1573736095841	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1573736095842	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1573736095842	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1573736095842	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1573736111681	Marionette	INFO	Listening on port 37259
1573736111823	Marionette	WARN	TLS certificate errors will be ignored for this session
1573736136145	Marionette	WARN	TimedPromise timed out after 500 ms: stacktrace:
bail@chrome://marionette/content/sync.js:237:64
[Parent 4675, Gecko_IOThread] WARNING: pipe error (80): Connection reset by peer: file /build/firefox-hE9N0Y/firefox-70.0.1+build1/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 358
IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)

1573736694754	Marionette	INFO	Stopped listening on port 37259
1573736703252	mozrunner::runner	INFO	Running command: "/usr/bin/firefox" "-marionette" "-foreground" "-no-remote" "-profile" "/tmp/rust_mozprofile.SASSSiY34sq7"
1573736704165	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1573736704166	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1573736704166	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1573736704166	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1573736708207	Marionette	INFO	Listening on port 40673
1573736708269	Marionette	WARN	TLS certificate errors will be ignored for this session
JavaScript error: https://static.xx.fbcdn.net/rsrc.php/v3/yR/r/rKQzd5lOgbR.js?_nc_x=3vjgpNIURrx, line 154: Error: Destroyed!
1573736729336	Marionette	WARN	TimedPromise timed out after 500 ms: stacktrace:
bail@chrome://marionette/content/sync.js:237:64
1573736731293	Marionette	WARN	TimedPromise timed out after 500 ms: stacktrace:
bail@chrome://marionette/content/sync.js:237:64
TypeError: store is null: dispatchSplitConsoleCloseButtonToggle@resource://devtools/client/webconsole/webconsole-wrapper.js:604:5
_onChangeSplitConsoleState@resource://devtools/client/webconsole/webconsole-ui.js:456:18
emit@resource://devtools/shared/event-emitter.js:190:24
emit@resource://devtools/shared/event-emitter.js:271:18
selectTool/<@resource://devtools/client/framework/toolbox.js:2523:12

SourceActor threw an exception: [Exception... "Failed to open input source 'file:///'"  nsresult: "0x80520015 (NS_ERROR_FILE_ACCESS_DENIED)"  location: "JS frame :: resource://devtools/shared/DevToolsUtils.js :: mainThreadFetch/< :: line 678"  data: yes]
Stack: mainThreadFetch/<@resource://devtools/shared/DevToolsUtils.js:678:15
mainThreadFetch@resource://devtools/shared/DevToolsUtils.js:530:10
_fetchURLContents@resource://devtools/server/actors/utils/TabSources.js:580:22
urlContents@resource://devtools/server/actors/utils/TabSources.js:547:17
_resurrectSource@resource://devtools/server/actors/thread.js:2033:69
addAllSources@resource://devtools/server/actors/thread.js:1334:14
onSources@resource://devtools/server/actors/thread.js:1340:10
onPacket@resource://devtools/server/debugger-server-connection.js:378:58
receiveMessage@resource://devtools/shared/transport/child-transport.js:66:16
Line: 678, column: 0
JavaScript error: resource://devtools/shared/DevToolsUtils.js, line 678: NS_ERROR_FILE_ACCESS_DENIED: Failed to open input source 'file:///'
[Parent 5518, Gecko_IOThread] WARNING: pipe error (68): Connection reset by peer: file /build/firefox-hE9N0Y/firefox-70.0.1+build1/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 358
IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)

IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)

1573736876817	Marionette	INFO	Stopped listening on port 40673
1573736900616	mozrunner::runner	INFO	Running command: "/usr/bin/firefox" "-marionette" "-foreground" "-no-remote" "-profile" "/tmp/rust_mozprofile.AOea2a9Illc9"
1573736901494	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1573736901494	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1573736901494	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1573736901495	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1573736906226	Marionette	INFO	Listening on port 33601
1573736906242	Marionette	WARN	TLS certificate errors will be ignored for this session
1573736921837	Marionette	WARN	TimedPromise timed out after 500 ms: stacktrace:
bail@chrome://marionette/content/sync.js:237:64
1573736923659	Marionette	WARN	TimedPromise timed out after 500 ms: stacktrace:
bail@chrome://marionette/content/sync.js:237:64
SourceActor threw an exception: [Exception... "Failed to open input source 'file:///'"  nsresult: "0x80520015 (NS_ERROR_FILE_ACCESS_DENIED)"  location: "JS frame :: resource://devtools/shared/DevToolsUtils.js :: mainThreadFetch/< :: line 678"  data: yes]
Stack: mainThreadFetch/<@resource://devtools/shared/DevToolsUtils.js:678:15
mainThreadFetch@resource://devtools/shared/DevToolsUtils.js:530:10
_fetchURLContents@resource://devtools/server/actors/utils/TabSources.js:580:22
urlContents@resource://devtools/server/actors/utils/TabSources.js:547:17
_resurrectSource@resource://devtools/server/actors/thread.js:2033:69
addAllSources@resource://devtools/server/actors/thread.js:1334:14
onSources@resource://devtools/server/actors/thread.js:1340:10
onPacket@resource://devtools/server/debugger-server-connection.js:378:58
receiveMessage@resource://devtools/shared/transport/child-transport.js:66:16
Line: 678, column: 0
JavaScript error: resource://devtools/shared/DevToolsUtils.js, line 678: NS_ERROR_FILE_ACCESS_DENIED: Failed to open input source 'file:///'
SourceActor threw an exception: [Exception... "Failed to open input source 'file:///'"  nsresult: "0x80520015 (NS_ERROR_FILE_ACCESS_DENIED)"  location: "JS frame :: resource://devtools/shared/DevToolsUtils.js :: mainThreadFetch/< :: line 678"  data: yes]
Stack: mainThreadFetch/<@resource://devtools/shared/DevToolsUtils.js:678:15
mainThreadFetch@resource://devtools/shared/DevToolsUtils.js:530:10
_fetchURLContents@resource://devtools/server/actors/utils/TabSources.js:580:22
urlContents@resource://devtools/server/actors/utils/TabSources.js:547:17
_resurrectSource@resource://devtools/server/actors/thread.js:2033:69
addAllSources@resource://devtools/server/actors/thread.js:1334:14
onSources@resource://devtools/server/actors/thread.js:1340:10
onPacket@resource://devtools/server/debugger-server-connection.js:378:58
receiveMessage@resource://devtools/shared/transport/child-transport.js:66:16
Line: 678, column: 0
JavaScript error: resource://devtools/shared/DevToolsUtils.js, line 678: NS_ERROR_FILE_ACCESS_DENIED: Failed to open input source 'file:///'
TypeError: parent is null: canMutationImpactCurrentStyles@resource://devtools/client/inspector/shared/style-change-tracker.js:63:24
onMutations@resource://devtools/client/inspector/shared/style-change-tracker.js:80:41
emit@resource://devtools/shared/event-emitter.js:190:24
emit@resource://devtools/shared/event-emitter.js:271:18
getMutations/<@resource://devtools/shared/fronts/inspector.js:425:12

JavaScript error: , line 0: UnknownError: The operation failed for reasons unrelated to the database itself and not covered by any other error code.
1573738198245	Marionette	INFO	Stopped listening on port 33601
1573739681252	mozrunner::runner	INFO	Running command: "/usr/bin/firefox" "-marionette" "-foreground" "-no-remote" "-profile" "/tmp/rust_mozprofile.Vi3kS4GIPQgX"
1573739682152	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1573739682152	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1573739682153	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1573739682153	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1573739697060	mozrunner::runner	INFO	Running command: "/usr/bin/firefox" "-marionette" "-foreground" "-no-remote" "-profile" "/tmp/rust_mozprofile.7fDqATnQz3NB"
1573739697904	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1573739697905	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1573739697905	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1573739697905	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1573739702023	Marionette	INFO	Listening on port 41803
1573739702078	Marionette	WARN	TLS certificate errors will be ignored for this session
1573739728930	Marionette	WARN	TimedPromise timed out after 500 ms: stacktrace:
bail@chrome://marionette/content/sync.js:237:64
[Parent 8045, Gecko_IOThread] WARNING: pipe error (68): Connection reset by peer: file /build/firefox-hE9N0Y/firefox-70.0.1+build1/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 358
[Parent 8045, Gecko_IOThread] WARNING: pipe error (56): Connection reset by peer: file /build/firefox-hE9N0Y/firefox-70.0.1+build1/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 358
[Parent 8045, Gecko_IOThread] WARNING: pipe error (136): Connection reset by peer: file /build/firefox-hE9N0Y/firefox-70.0.1+build1/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 358
JavaScript error: , line 0: UnknownError: The operation failed for reasons unrelated to the database itself and not covered by any other error code.
1573739813466	Marionette	INFO	Stopped listening on port 41803
1573739819806	mozrunner::runner	INFO	Running command: "/usr/bin/firefox" "-marionette" "-foreground" "-no-remote" "-profile" "/tmp/rust_mozprofile.soNEf97C8Vsg"
1573739820649	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1573739820649	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1573739820650	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1573739820650	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1573739824755	Marionette	INFO	Listening on port 34951
1573739824827	Marionette	WARN	TLS certificate errors will be ignored for this session
1573739845047	Marionette	WARN	TimedPromise timed out after 500 ms: stacktrace:
bail@chrome://marionette/content/sync.js:237:64
[Parent 8285, Gecko_IOThread] WARNING: pipe error (68): Connection reset by peer: file /build/firefox-hE9N0Y/firefox-70.0.1+build1/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 358
[Parent 8285, Gecko_IOThread] WARNING: pipe error (76): Connection reset by peer: file /build/firefox-hE9N0Y/firefox-70.0.1+build1/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 358
JavaScript error: , line 0: UnknownError: The operation failed for reasons unrelated to the database itself and not covered by any other error code.
1573739928376	Marionette	INFO	Stopped listening on port 34951
1573739933457	mozrunner::runner	INFO	Running command: "/usr/bin/firefox" "-marionette" "-foreground" "-no-remote" "-profile" "/tmp/rust_mozprofile.LmZ0aziK9Oyx"
1573739934380	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1573739934381	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1573739934381	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1573739934381	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1573739938400	Marionette	INFO	Listening on port 34429
1573739938476	Marionette	WARN	TLS certificate errors will be ignored for this session
1573739968419	Marionette	WARN	TimedPromise timed out after 500 ms: stacktrace:
bail@chrome://marionette/content/sync.js:237:64
JavaScript error: https://static.xx.fbcdn.net/rsrc.php/v3/yR/r/rKQzd5lOgbR.js?_nc_x=3vjgpNIURrx, line 154: Error: Destroyed!
JavaScript error: https://static.xx.fbcdn.net/rsrc.php/v3/yR/r/rKQzd5lOgbR.js?_nc_x=3vjgpNIURrx, line 154: Error: Destroyed!
SourceActor threw an exception: [Exception... "Failed to open input source 'file:///'"  nsresult: "0x80520015 (NS_ERROR_FILE_ACCESS_DENIED)"  location: "JS frame :: resource://devtools/shared/DevToolsUtils.js :: mainThreadFetch/< :: line 678"  data: yes]
Stack: mainThreadFetch/<@resource://devtools/shared/DevToolsUtils.js:678:15
mainThreadFetch@resource://devtools/shared/DevToolsUtils.js:530:10
_fetchURLContents@resource://devtools/server/actors/utils/TabSources.js:580:22
urlContents@resource://devtools/server/actors/utils/TabSources.js:547:17
_resurrectSource@resource://devtools/server/actors/thread.js:2033:69
addAllSources@resource://devtools/server/actors/thread.js:1334:14
onSources@resource://devtools/server/actors/thread.js:1340:10
onPacket@resource://devtools/server/debugger-server-connection.js:378:58
receiveMessage@resource://devtools/shared/transport/child-transport.js:66:16
Line: 678, column: 0
JavaScript error: resource://devtools/shared/DevToolsUtils.js, line 678: NS_ERROR_FILE_ACCESS_DENIED: Failed to open input source 'file:///'
1573740141170	mozrunner::runner	INFO	Running command: "/usr/bin/firefox" "-marionette" "-foreground" "-no-remote" "-profile" "/tmp/rust_mozprofile.MTZaaQmzocQw"
1573740142049	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1573740142050	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1573740142050	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1573740142050	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1573740146205	Marionette	INFO	Listening on port 35151
1573740146295	Marionette	WARN	TLS certificate errors will be ignored for this session
JavaScript error: , line 0: uncaught exception: Object
JavaScript error: data:application/x-javascript;charset=utf-8;base64,, line 153: Error: Destroyed!
JavaScript error: data:application/x-javascript;charset=utf-8;base64,, line 153: Error: Destroyed!
1573740161743	Marionette	WARN	TimedPromise timed out after 500 ms: stacktrace:
bail@chrome://marionette/content/sync.js:237:64
1573740167158	Marionette	WARN	TimedPromise timed out after 500 ms: stacktrace:
bail@chrome://marionette/content/sync.js:237:64
[Parent 8554, Gecko_IOThread] WARNING: pipe error (68): Connection reset by peer: file /build/firefox-hE9N0Y/firefox-70.0.1+build1/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 358
[Parent 8554, Gecko_IOThread] WARNING: pipe error (92): Connection reset by peer: file /build/firefox-hE9N0Y/firefox-70.0.1+build1/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 358
JavaScript error: , line 0: UnknownError: The operation failed for reasons unrelated to the database itself and not covered by any other error code.
1573740208181	Marionette	INFO	Stopped listening on port 34429
1573740211326	mozrunner::runner	INFO	Running command: "/usr/bin/firefox" "-marionette" "-foreground" "-no-remote" "-profile" "/tmp/rust_mozprofile.2N30PbHr8nzG"
1573740212481	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1573740212481	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1573740212482	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1573740212482	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1573740217248	Marionette	INFO	Listening on port 42963
1573740217353	Marionette	WARN	TLS certificate errors will be ignored for this session
1573740224583	Marionette	INFO	Stopped listening on port 35151
JavaScript error: , line 0: uncaught exception: Object
JavaScript error: data:application/x-javascript;charset=utf-8;base64,, line 153: Error: Destroyed!
JavaScript error: data:application/x-javascript;charset=utf-8;base64,, line 153: Error: Destroyed!
1573740232728	Marionette	WARN	TimedPromise timed out after 500 ms: stacktrace:
bail@chrome://marionette/content/sync.js:237:64
1573740238431	Marionette	WARN	TimedPromise timed out after 500 ms: stacktrace:
bail@chrome://marionette/content/sync.js:237:64
SourceActor threw an exception: [Exception... "Failed to open input source 'file:///'"  nsresult: "0x80520015 (NS_ERROR_FILE_ACCESS_DENIED)"  location: "JS frame :: resource://devtools/shared/DevToolsUtils.js :: mainThreadFetch/< :: line 678"  data: yes]
Stack: mainThreadFetch/<@resource://devtools/shared/DevToolsUtils.js:678:15
mainThreadFetch@resource://devtools/shared/DevToolsUtils.js:530:10
_fetchURLContents@resource://devtools/server/actors/utils/TabSources.js:580:22
urlContents@resource://devtools/server/actors/utils/TabSources.js:547:17
_resurrectSource@resource://devtools/server/actors/thread.js:2033:69
addAllSources@resource://devtools/server/actors/thread.js:1334:14
onSources@resource://devtools/server/actors/thread.js:1340:10
onPacket@resource://devtools/server/debugger-server-connection.js:378:58
receiveMessage@resource://devtools/shared/transport/child-transport.js:66:16
Line: 678, column: 0
JavaScript error: resource://devtools/shared/DevToolsUtils.js, line 678: NS_ERROR_FILE_ACCESS_DENIED: Failed to open input source 'file:///'
[Parent 9236, Gecko_IOThread] WARNING: pipe error (68): Connection reset by peer: file /build/firefox-hE9N0Y/firefox-70.0.1+build1/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 358
1573740370819	Marionette	INFO	Stopped listening on port 42963
1573740474713	mozrunner::runner	INFO	Running command: "/usr/bin/firefox" "-marionette" "-foreground" "-no-remote" "-profile" "/tmp/rust_mozprofile.0key9oeCDFjg"
1573740475727	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1573740475728	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1573740475728	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1573740475728	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1573740479844	Marionette	INFO	Listening on port 37211
1573740479937	Marionette	WARN	TLS certificate errors will be ignored for this session
JavaScript error: https://static.xx.fbcdn.net/rsrc.php/v3/yR/r/rKQzd5lOgbR.js?_nc_x=3vjgpNIURrx, line 154: Error: Destroyed!
1573740498157	Marionette	WARN	TimedPromise timed out after 500 ms: stacktrace:
bail@chrome://marionette/content/sync.js:237:64
JavaScript error: https://static.xx.fbcdn.net/rsrc.php/v3/yR/r/rKQzd5lOgbR.js?_nc_x=3vjgpNIURrx, line 154: Error: Destroyed!
1573740504658	Marionette	WARN	TimedPromise timed out after 500 ms: stacktrace:
bail@chrome://marionette/content/sync.js:237:64
1573740560792	Marionette	INFO	Stopped listening on port 37211
1573740582417	mozrunner::runner	INFO	Running command: "/usr/bin/firefox" "-marionette" "-foreground" "-no-remote" "-profile" "/tmp/rust_mozprofile.xjRra5FRUBYB"
1573740583307	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1573740583307	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1573740583307	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1573740583308	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1573740587470	Marionette	INFO	Listening on port 38265
1573740587537	Marionette	WARN	TLS certificate errors will be ignored for this session
1573740625931	Marionette	WARN	TimedPromise timed out after 500 ms: stacktrace:
bail@chrome://marionette/content/sync.js:237:64
1573740627488	Marionette	WARN	TimedPromise timed out after 500 ms: stacktrace:
bail@chrome://marionette/content/sync.js:237:64
1573740682915	mozrunner::runner	INFO	Running command: "/usr/bin/firefox" "-marionette" "-foreground" "-no-remote" "-profile" "/tmp/rust_mozprofile.yWuPOY9gDRbm"
1573740683801	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1573740683801	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1573740683802	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1573740683802	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1573740687963	Marionette	INFO	Listening on port 34427
1573740688040	Marionette	WARN	TLS certificate errors will be ignored for this session
JavaScript error: , line 0: uncaught exception: Object
JavaScript error: https://static.xx.fbcdn.net/rsrc.php/v3/yR/r/rKQzd5lOgbR.js?_nc_x=3vjgpNIURrx, line 154: Error: Destroyed!
JavaScript error: https://static.xx.fbcdn.net/rsrc.php/v3/yR/r/rKQzd5lOgbR.js?_nc_x=3vjgpNIURrx, line 154: Error: Destroyed!
1573740703545	Marionette	WARN	TimedPromise timed out after 500 ms: stacktrace:
bail@chrome://marionette/content/sync.js:237:64
1573740709010	Marionette	WARN	TimedPromise timed out after 500 ms: stacktrace:
bail@chrome://marionette/content/sync.js:237:64
1573740762033	mozrunner::runner	INFO	Running command: "/usr/bin/firefox" "-marionette" "-foreground" "-no-remote" "-profile" "/tmp/rust_mozprofile.qbGEkwpMQmNY"
1573740763190	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1573740763191	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1573740763191	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1573740763191	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1573740768430	Marionette	INFO	Listening on port 44057
1573740768474	Marionette	WARN	TLS certificate errors will be ignored for this session
JavaScript error: https://static.xx.fbcdn.net/rsrc.php/v3/yR/r/rKQzd5lOgbR.js?_nc_x=3vjgpNIURrx, line 154: Error: Destroyed!
JavaScript error: https://static.xx.fbcdn.net/rsrc.php/v3/yR/r/rKQzd5lOgbR.js?_nc_x=3vjgpNIURrx, line 154: Error: Destroyed!
1573740805124	Marionette	WARN	TimedPromise timed out after 500 ms: stacktrace:
bail@chrome://marionette/content/sync.js:237:64
1573740961148	mozrunner::runner	INFO	Running command: "/usr/bin/firefox" "-marionette" "-foreground" "-no-remote" "-profile" "/tmp/rust_mozprofile.dCvUtwuOqql1"
1573740962256	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1573740962259	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1573740962260	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1573740962260	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1573740967239	Marionette	INFO	Listening on port 40879
1573740967275	Marionette	WARN	TLS certificate errors will be ignored for this session
[Parent 10492, Gecko_IOThread] WARNING: pipe error (76): Connection reset by peer: file /build/firefox-hE9N0Y/firefox-70.0.1+build1/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 358
[Parent 10026, Gecko_IOThread] WARNING: pipe error (91): Connection reset by peer: file /build/firefox-hE9N0Y/firefox-70.0.1+build1/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 358
JavaScript error: , line 0: UnknownError: The operation failed for reasons unrelated to the database itself and not covered by any other error code.
1573740974534	Marionette	INFO	Stopped listening on port 44057
JavaScript error: , line 0: UnknownError: The operation failed for reasons unrelated to the database itself and not covered by any other error code.
1573740974970	Marionette	INFO	Stopped listening on port 38265
JavaScript error: , line 0: UnknownError: The operation failed for reasons unrelated to the database itself and not covered by any other error code.
1573740976255	Marionette	INFO	Stopped listening on port 34427
1573740984976	Marionette	WARN	TimedPromise timed out after 500 ms: stacktrace:
bail@chrome://marionette/content/sync.js:237:64
1573741090446	mozrunner::runner	INFO	Running command: "/usr/bin/firefox" "-marionette" "-foreground" "-no-remote" "-profile" "/tmp/rust_mozprofile.IPJtB6wmUWk7"
1573741091381	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1573741091381	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1573741091381	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1573741091382	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1573741096023	Marionette	INFO	Listening on port 33377
1573741096065	Marionette	WARN	TLS certificate errors will be ignored for this session
1573741128430	mozrunner::runner	INFO	Running command: "/usr/bin/firefox" "-marionette" "-foreground" "-no-remote" "-profile" "/tmp/rust_mozprofile.mRBSV7BltLSq"
1573741129460	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1573741129461	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1573741129461	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1573741129461	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1573741134035	Marionette	INFO	Listening on port 42387
1573741134061	Marionette	WARN	TLS certificate errors will be ignored for this session
1573741137680	Marionette	INFO	Stopped listening on port 33377
[Parent 11323, Gecko_IOThread] WARNING: pipe error (68): Connection reset by peer: file /build/firefox-hE9N0Y/firefox-70.0.1+build1/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 358
[Parent 11323, Gecko_IOThread] WARNING: pipe error (89): Connection reset by peer: file /build/firefox-hE9N0Y/firefox-70.0.1+build1/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 358
JavaScript error: , line 0: UnknownError: The operation failed for reasons unrelated to the database itself and not covered by any other error code.
1573741222782	Marionette	INFO	Stopped listening on port 42387
[Parent 10806, Gecko_IOThread] WARNING: pipe error (76): Connection reset by peer: file /build/firefox-hE9N0Y/firefox-70.0.1+build1/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 358
[Parent 10806, Gecko_IOThread] WARNING: pipe error (142): Connection reset by peer: file /build/firefox-hE9N0Y/firefox-70.0.1+build1/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 358
1573741224213	Marionette	INFO	Stopped listening on port 40879
1573741227547	mozrunner::runner	INFO	Running command: "/usr/bin/firefox" "-marionette" "-foreground" "-no-remote" "-profile" "/tmp/rust_mozprofile.xVSX7eYAp94P"
1573741228456	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1573741228456	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1573741228456	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1573741228456	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1573741232716	Marionette	INFO	Listening on port 41209
1573741232765	Marionette	WARN	TLS certificate errors will be ignored for this session
1573741252512	Marionette	WARN	TimedPromise timed out after 500 ms: stacktrace:
bail@chrome://marionette/content/sync.js:237:64
1573741258240	Marionette	WARN	TimedPromise timed out after 500 ms: stacktrace:
bail@chrome://marionette/content/sync.js:237:64
[Parent 11592, Gecko_IOThread] WARNING: pipe error (68): Connection reset by peer: file /build/firefox-hE9N0Y/firefox-70.0.1+build1/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 358
[Parent 11592, Gecko_IOThread] WARNING: pipe error (56): Connection reset by peer: file /build/firefox-hE9N0Y/firefox-70.0.1+build1/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 358
JavaScript error: , line 0: UnknownError: The operation failed for reasons unrelated to the database itself and not covered by any other error code.
1573741904343	Marionette	INFO	Stopped listening on port 41209
1573751713917	mozrunner::runner	INFO	Running command: "/usr/bin/firefox" "-marionette" "-foreground" "-no-remote" "-profile" "/tmp/rust_mozprofile.eBEeywzQxvWp"
1573751720388	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1573751720389	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1573751720389	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1573751720389	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1573751730968	Marionette	INFO	Listening on port 45739
1573751731109	Marionette	WARN	TLS certificate errors will be ignored for this session
SourceActor threw an exception: [Exception... "Failed to open input source 'file:///'"  nsresult: "0x80520015 (NS_ERROR_FILE_ACCESS_DENIED)"  location: "JS frame :: resource://devtools/shared/DevToolsUtils.js :: mainThreadFetch/< :: line 678"  data: yes]
Stack: mainThreadFetch/<@resource://devtools/shared/DevToolsUtils.js:678:15
mainThreadFetch@resource://devtools/shared/DevToolsUtils.js:530:10
_fetchURLContents@resource://devtools/server/actors/utils/TabSources.js:580:22
urlContents@resource://devtools/server/actors/utils/TabSources.js:547:17
_resurrectSource@resource://devtools/server/actors/thread.js:2033:69
addAllSources@resource://devtools/server/actors/thread.js:1334:14
onSources@resource://devtools/server/actors/thread.js:1340:10
onPacket@resource://devtools/server/debugger-server-connection.js:378:58
receiveMessage@resource://devtools/shared/transport/child-transport.js:66:16
Line: 678, column: 0
JavaScript error: resource://devtools/shared/DevToolsUtils.js, line 678: NS_ERROR_FILE_ACCESS_DENIED: Failed to open input source 'file:///'
[Parent 5393, Gecko_IOThread] WARNING: pipe error (68): Connection reset by peer: file /build/firefox-hE9N0Y/firefox-70.0.1+build1/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 358
1573751996668	Marionette	INFO	Stopped listening on port 45739
1573752030928	mozrunner::runner	INFO	Running command: "/usr/bin/firefox" "-marionette" "-foreground" "-no-remote" "-profile" "/tmp/rust_mozprofile.YO8MtIaWv3fG"
1573752032023	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1573752032023	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1573752032024	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1573752032024	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1573752036714	Marionette	INFO	Listening on port 41765
1573752036777	Marionette	WARN	TLS certificate errors will be ignored for this session
SourceActor threw an exception: [Exception... "Failed to open input source 'file:///'"  nsresult: "0x80520015 (NS_ERROR_FILE_ACCESS_DENIED)"  location: "JS frame :: resource://devtools/shared/DevToolsUtils.js :: mainThreadFetch/< :: line 678"  data: yes]
Stack: mainThreadFetch/<@resource://devtools/shared/DevToolsUtils.js:678:15
mainThreadFetch@resource://devtools/shared/DevToolsUtils.js:530:10
_fetchURLContents@resource://devtools/server/actors/utils/TabSources.js:580:22
urlContents@resource://devtools/server/actors/utils/TabSources.js:547:17
_resurrectSource@resource://devtools/server/actors/thread.js:2033:69
addAllSources@resource://devtools/server/actors/thread.js:1334:14
onSources@resource://devtools/server/actors/thread.js:1340:10
onPacket@resource://devtools/server/debugger-server-connection.js:378:58
receiveMessage@resource://devtools/shared/transport/child-transport.js:66:16
Line: 678, column: 0
JavaScript error: resource://devtools/shared/DevToolsUtils.js, line 678: NS_ERROR_FILE_ACCESS_DENIED: Failed to open input source 'file:///'
[Parent 5990, Gecko_IOThread] WARNING: pipe error (92): Connection reset by peer: file /build/firefox-hE9N0Y/firefox-70.0.1+build1/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 358
1573752282098	Marionette	INFO	Stopped listening on port 41765
1573752298785	mozrunner::runner	INFO	Running command: "/usr/bin/firefox" "-marionette" "-foreground" "-no-remote" "-profile" "/tmp/rust_mozprofile.OqO3ByxI9KMW"
1573752299769	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1573752299769	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1573752299769	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1573752299769	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1573752304062	Marionette	INFO	Listening on port 43747
1573752304109	Marionette	WARN	TLS certificate errors will be ignored for this session
SourceActor threw an exception: [Exception... "Failed to open input source 'file:///'"  nsresult: "0x80520015 (NS_ERROR_FILE_ACCESS_DENIED)"  location: "JS frame :: resource://devtools/shared/DevToolsUtils.js :: mainThreadFetch/< :: line 678"  data: yes]
Stack: mainThreadFetch/<@resource://devtools/shared/DevToolsUtils.js:678:15
mainThreadFetch@resource://devtools/shared/DevToolsUtils.js:530:10
_fetchURLContents@resource://devtools/server/actors/utils/TabSources.js:580:22
urlContents@resource://devtools/server/actors/utils/TabSources.js:547:17
_resurrectSource@resource://devtools/server/actors/thread.js:2033:69
addAllSources@resource://devtools/server/actors/thread.js:1334:14
onSources@resource://devtools/server/actors/thread.js:1340:10
onPacket@resource://devtools/server/debugger-server-connection.js:378:58
receiveMessage@resource://devtools/shared/transport/child-transport.js:66:16
Line: 678, column: 0
JavaScript error: resource://devtools/shared/DevToolsUtils.js, line 678: NS_ERROR_FILE_ACCESS_DENIED: Failed to open input source 'file:///'
1573752502669	mozrunner::runner	INFO	Running command: "/usr/bin/firefox" "-marionette" "-foreground" "-no-remote" "-profile" "/tmp/rust_mozprofile.qoJx890LIhaI"
1573752503583	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1573752503583	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1573752503584	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1573752503584	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1573752507897	Marionette	INFO	Listening on port 35483
1573752507993	Marionette	WARN	TLS certificate errors will be ignored for this session
[Parent 6986, Gecko_IOThread] WARNING: pipe error (68): Connection reset by peer: file /build/firefox-hE9N0Y/firefox-70.0.1+build1/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 358
[Parent 6986, Gecko_IOThread] WARNING: pipe error (81): Connection reset by peer: file /build/firefox-hE9N0Y/firefox-70.0.1+build1/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 358
1573752563536	Marionette	INFO	Stopped listening on port 43747
1573752569867	mozrunner::runner	INFO	Running command: "/usr/bin/firefox" "-marionette" "-foreground" "-no-remote" "-profile" "/tmp/rust_mozprofile.06q6z20gvOCy"
1573752570395	Marionette	INFO	Stopped listening on port 35483
1573752570998	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1573752570999	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1573752570999	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1573752570999	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1573752575434	Marionette	INFO	Listening on port 36565
1573752575490	Marionette	WARN	TLS certificate errors will be ignored for this session
[Parent 7568, Gecko_IOThread] WARNING: pipe error (76): Connection reset by peer: file /build/firefox-hE9N0Y/firefox-70.0.1+build1/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 358
[Parent 7568, Gecko_IOThread] WARNING: pipe error (68): Connection reset by peer: file /build/firefox-hE9N0Y/firefox-70.0.1+build1/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 358
JavaScript error: , line 0: UnknownError: The operation failed for reasons unrelated to the database itself and not covered by any other error code.
1573752957686	Marionette	INFO	Stopped listening on port 36565
1573752983005	mozrunner::runner	INFO	Running command: "/usr/bin/firefox" "-marionette" "-foreground" "-no-remote" "-profile" "/tmp/rust_mozprofile.xDZT5zvdl87U"
1573752983938	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1573752983938	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1573752983939	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1573752983939	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1573752988102	Marionette	INFO	Listening on port 43203
1573752988122	Marionette	WARN	TLS certificate errors will be ignored for this session
1573753043433	mozrunner::runner	INFO	Running command: "/usr/bin/firefox" "-marionette" "-foreground" "-no-remote" "-profile" "/tmp/rust_mozprofile.RkgVmqctklgQ"
1573753044363	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1573753044363	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1573753044364	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1573753044364	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1573753048725	Marionette	INFO	Listening on port 38433
1573753048757	Marionette	WARN	TLS certificate errors will be ignored for this session
1573753051969	Marionette	INFO	Stopped listening on port 43203
SourceActor threw an exception: [Exception... "Failed to open input source 'file:///'"  nsresult: "0x80520015 (NS_ERROR_FILE_ACCESS_DENIED)"  location: "JS frame :: resource://devtools/shared/DevToolsUtils.js :: mainThreadFetch/< :: line 678"  data: yes]
Stack: mainThreadFetch/<@resource://devtools/shared/DevToolsUtils.js:678:15
mainThreadFetch@resource://devtools/shared/DevToolsUtils.js:530:10
_fetchURLContents@resource://devtools/server/actors/utils/TabSources.js:580:22
urlContents@resource://devtools/server/actors/utils/TabSources.js:547:17
_resurrectSource@resource://devtools/server/actors/thread.js:2033:69
addAllSources@resource://devtools/server/actors/thread.js:1334:14
onSources@resource://devtools/server/actors/thread.js:1340:10
onPacket@resource://devtools/server/debugger-server-connection.js:378:58
receiveMessage@resource://devtools/shared/transport/child-transport.js:66:16
Line: 678, column: 0
JavaScript error: resource://devtools/shared/DevToolsUtils.js, line 678: NS_ERROR_FILE_ACCESS_DENIED: Failed to open input source 'file:///'
IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)

IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)

IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)

IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)

IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)

IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)

IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)

[Parent 8134, Gecko_IOThread] WARNING: pipe error (92): Connection reset by peer: file /build/firefox-hE9N0Y/firefox-70.0.1+build1/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 358
1573753209970	Marionette	INFO	Stopped listening on port 38433
1573753212515	mozrunner::runner	INFO	Running command: "/usr/bin/firefox" "-marionette" "-foreground" "-no-remote" "-profile" "/tmp/rust_mozprofile.QgenlZGnan7d"
1573753213552	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1573753213553	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1573753213553	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1573753213554	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1573753218653	Marionette	INFO	Listening on port 40825
1573753218741	Marionette	WARN	TLS certificate errors will be ignored for this session
SourceActor threw an exception: [Exception... "Failed to open input source 'file:///'"  nsresult: "0x80520015 (NS_ERROR_FILE_ACCESS_DENIED)"  location: "JS frame :: resource://devtools/shared/DevToolsUtils.js :: mainThreadFetch/< :: line 678"  data: yes]
Stack: mainThreadFetch/<@resource://devtools/shared/DevToolsUtils.js:678:15
mainThreadFetch@resource://devtools/shared/DevToolsUtils.js:530:10
_fetchURLContents@resource://devtools/server/actors/utils/TabSources.js:580:22
urlContents@resource://devtools/server/actors/utils/TabSources.js:547:17
_resurrectSource@resource://devtools/server/actors/thread.js:2033:69
addAllSources@resource://devtools/server/actors/thread.js:1334:14
onSources@resource://devtools/server/actors/thread.js:1340:10
onPacket@resource://devtools/server/debugger-server-connection.js:378:58
receiveMessage@resource://devtools/shared/transport/child-transport.js:66:16
Line: 678, column: 0
JavaScript error: resource://devtools/shared/DevToolsUtils.js, line 678: NS_ERROR_FILE_ACCESS_DENIED: Failed to open input source 'file:///'
JavaScript error: resource://devtools/client/inspector/markup/markup.js, line 719: TypeError: this._highlightedNodeFront is undefined
[Parent 8534, Gecko_IOThread] WARNING: pipe error (69): Connection reset by peer: file /build/firefox-hE9N0Y/firefox-70.0.1+build1/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 358
[Parent 8534, Gecko_IOThread] WARNING: pipe error (92): Connection reset by peer: file /build/firefox-hE9N0Y/firefox-70.0.1+build1/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 358
JavaScript error: , line 0: UnknownError: The operation failed for reasons unrelated to the database itself and not covered by any other error code.
1573753337521	Marionette	INFO	Stopped listening on port 40825
1573753338443	mozrunner::runner	INFO	Running command: "/usr/bin/firefox" "-marionette" "-foreground" "-no-remote" "-profile" "/tmp/rust_mozprofile.lrktUyUSkGUf"
1573753339485	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1573753339485	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1573753339485	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1573753339486	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1573753344088	Marionette	INFO	Listening on port 39373
1573753344167	Marionette	WARN	TLS certificate errors will be ignored for this session
SourceActor threw an exception: [Exception... "Failed to open input source 'file:///'"  nsresult: "0x80520015 (NS_ERROR_FILE_ACCESS_DENIED)"  location: "JS frame :: resource://devtools/shared/DevToolsUtils.js :: mainThreadFetch/< :: line 678"  data: yes]
Stack: mainThreadFetch/<@resource://devtools/shared/DevToolsUtils.js:678:15
mainThreadFetch@resource://devtools/shared/DevToolsUtils.js:530:10
_fetchURLContents@resource://devtools/server/actors/utils/TabSources.js:580:22
urlContents@resource://devtools/server/actors/utils/TabSources.js:547:17
_resurrectSource@resource://devtools/server/actors/thread.js:2033:69
addAllSources@resource://devtools/server/actors/thread.js:1334:14
onSources@resource://devtools/server/actors/thread.js:1340:10
onPacket@resource://devtools/server/debugger-server-connection.js:378:58
receiveMessage@resource://devtools/shared/transport/child-transport.js:66:16
Line: 678, column: 0
JavaScript error: resource://devtools/shared/DevToolsUtils.js, line 678: NS_ERROR_FILE_ACCESS_DENIED: Failed to open input source 'file:///'
IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)

IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)

IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)

IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)

IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)

IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)

IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)

[Parent 8849, Gecko_IOThread] WARNING: pipe error (69): Connection reset by peer: file /build/firefox-hE9N0Y/firefox-70.0.1+build1/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 358
[Parent 8849, Gecko_IOThread] WARNING: pipe error (68): Connection reset by peer: file /build/firefox-hE9N0Y/firefox-70.0.1+build1/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 358
JavaScript error: , line 0: UnknownError: The operation failed for reasons unrelated to the database itself and not covered by any other error code.
1573753783928	Marionette	INFO	Stopped listening on port 39373
1573753786335	mozrunner::runner	INFO	Running command: "/usr/bin/firefox" "-marionette" "-foreground" "-no-remote" "-profile" "/tmp/rust_mozprofile.yty8w2Pb1dQT"
1573753787200	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1573753787200	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1573753787200	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1573753787200	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1573753791347	Marionette	INFO	Listening on port 41659
1573753791368	Marionette	WARN	TLS certificate errors will be ignored for this session
[Parent 9425, Gecko_IOThread] WARNING: pipe error (69): Connection reset by peer: file /build/firefox-hE9N0Y/firefox-70.0.1+build1/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 358
[Parent 9425, Gecko_IOThread] WARNING: pipe error (92): Connection reset by peer: file /build/firefox-hE9N0Y/firefox-70.0.1+build1/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 358
JavaScript error: , line 0: UnknownError: The operation failed for reasons unrelated to the database itself and not covered by any other error code.
1573753891211	Marionette	INFO	Stopped listening on port 41659
1573753891495	mozrunner::runner	INFO	Running command: "/usr/bin/firefox" "-marionette" "-foreground" "-no-remote" "-profile" "/tmp/rust_mozprofile.WbdjGbEnsKCB"
1573753892428	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1573753892428	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1573753892428	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1573753892429	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1573753897447	Marionette	INFO	Listening on port 42193
1573753897523	Marionette	WARN	TLS certificate errors will be ignored for this session
1573753981399	Marionette	INFO	Stopped listening on port 42193
1573754017790	mozrunner::runner	INFO	Running command: "/usr/bin/firefox" "-marionette" "-foreground" "-no-remote" "-profile" "/tmp/rust_mozprofile.MZoZ8cx2hnlk"
1573754018701	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1573754018702	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1573754018702	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1573754018702	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1573754022835	Marionette	INFO	Listening on port 33839
1573754022908	Marionette	WARN	TLS certificate errors will be ignored for this session
SourceActor threw an exception: [Exception... "Failed to open input source 'file:///'"  nsresult: "0x80520015 (NS_ERROR_FILE_ACCESS_DENIED)"  location: "JS frame :: resource://devtools/shared/DevToolsUtils.js :: mainThreadFetch/< :: line 678"  data: yes]
Stack: mainThreadFetch/<@resource://devtools/shared/DevToolsUtils.js:678:15
mainThreadFetch@resource://devtools/shared/DevToolsUtils.js:530:10
_fetchURLContents@resource://devtools/server/actors/utils/TabSources.js:580:22
urlContents@resource://devtools/server/actors/utils/TabSources.js:547:17
_resurrectSource@resource://devtools/server/actors/thread.js:2033:69
addAllSources@resource://devtools/server/actors/thread.js:1334:14
onSources@resource://devtools/server/actors/thread.js:1340:10
onPacket@resource://devtools/server/debugger-server-connection.js:378:58
receiveMessage@resource://devtools/shared/transport/child-transport.js:66:16
Line: 678, column: 0
JavaScript error: resource://devtools/shared/DevToolsUtils.js, line 678: NS_ERROR_FILE_ACCESS_DENIED: Failed to open input source 'file:///'
1573754188544	mozrunner::runner	INFO	Running command: "/usr/bin/firefox" "-marionette" "-foreground" "-no-remote" "-profile" "/tmp/rust_mozprofile.8y5mgddny2iH"
1573754189524	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1573754189524	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1573754189524	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1573754189524	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
[Parent 9974, Gecko_IOThread] WARNING: pipe error (68): Connection reset by peer: file /build/firefox-hE9N0Y/firefox-70.0.1+build1/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 358
1573754192891	Marionette	INFO	Stopped listening on port 33839
1573754194087	Marionette	INFO	Listening on port 34655
1573754194164	Marionette	WARN	TLS certificate errors will be ignored for this session
Exiting due to channel error.
[GFX1-]: Receive IPC close with reason=AbnormalShutdown
[Child 10292, Chrome_ChildThread] WARNING: pipe error (3): Connection reset by peer: file /build/firefox-hE9N0Y/firefox-70.0.1+build1/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 358
Exiting due to channel error.
[Child 10310, Chrome_ChildThread] WARNING: pipe error: Broken pipe: file /build/firefox-hE9N0Y/firefox-70.0.1+build1/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 728
[Child 10310, Chrome_ChildThread] WARNING: pipe error: Broken pipe: file /build/firefox-hE9N0Y/firefox-70.0.1+build1/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 728
[Child 10310, Chrome_ChildThread] WARNING: pipe error: Broken pipe: file /build/firefox-hE9N0Y/firefox-70.0.1+build1/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 728
[Child 10310, Chrome_ChildThread] WARNING: pipe error: Broken pipe: file /build/firefox-hE9N0Y/firefox-70.0.1+build1/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 728
[Child 10310, Chrome_ChildThread] WARNING: pipe error: Broken pipe: file /build/firefox-hE9N0Y/firefox-70.0.1+build1/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 728
[Child 10310, Chrome_ChildThread] WARNING: pipe error (3): Connection reset by peer: file /build/firefox-hE9N0Y/firefox-70.0.1+build1/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 358
Exiting due to channel error.
1573754235332	mozrunner::runner	INFO	Running command: "/usr/bin/firefox" "-marionette" "-foreground" "-no-remote" "-profile" "/tmp/rust_mozprofile.IVYUzfPqKB94"
1573754236257	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1573754236257	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1573754236258	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1573754236258	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1573754240652	Marionette	INFO	Listening on port 44203
1573754240755	Marionette	WARN	TLS certificate errors will be ignored for this session
Exiting due to channel error.
Exiting due to channel error.
Exiting due to channel error.
1573754248760	mozrunner::runner	INFO	Running command: "/usr/bin/firefox" "-marionette" "-foreground" "-no-remote" "-profile" "/tmp/rust_mozprofile.eJDMSqFZ6Xxk"
1573754250073	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1573754250074	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1573754250074	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1573754250074	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1573754254628	Marionette	INFO	Listening on port 33311
1573754254684	Marionette	WARN	TLS certificate errors will be ignored for this session
Exiting due to channel error.
[Child 10698, Chrome_ChildThread] WARNING: pipe error (39): Connection reset by peer: file /build/firefox-hE9N0Y/firefox-70.0.1+build1/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 358
Exiting due to channel error.
Exiting due to channel error.
1573754299996	mozrunner::runner	INFO	Running command: "/usr/bin/firefox" "-marionette" "-foreground" "-no-remote" "-profile" "/tmp/rust_mozprofile.I7jR2Q0K1iLk"
1573754300968	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1573754300968	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1573754300968	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1573754300968	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1573754305276	Marionette	INFO	Listening on port 36165
1573754305326	Marionette	WARN	TLS certificate errors will be ignored for this session

###!!! [Child][RunMessage] Error: Channel closing: too late to send/recv, messages will be lost


###!!! [Child][RunMessage] Error: Channel closing: too late to send/recv, messages will be lost


###!!! [Child][RunMessage] Error: Channel closing: too late to send/recv, messages will be lost


###!!! [Child][RunMessage] Error: Channel closing: too late to send/recv, messages will be lost


###!!! [Child][RunMessage] Error: Channel closing: too late to send/recv, messages will be lost


###!!! [Child][RunMessage] Error: Channel closing: too late to send/recv, messages will be lost


###!!! [Child][RunMessage] Error: Channel closing: too late to send/recv, messages will be lost

[Parent 10853, Gecko_IOThread] WARNING: pipe error (138): Connection reset by peer: file /build/firefox-hE9N0Y/firefox-70.0.1+build1/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 358
1573754347721	mozrunner::runner	INFO	Running command: "/usr/bin/firefox" "-marionette" "-foreground" "-no-remote" "-profile" "/tmp/rust_mozprofile.9b9tar9SbZSf"
1573754348827	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1573754348828	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1573754348828	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1573754348828	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1573754353948	Marionette	INFO	Listening on port 35685
1573754354046	Marionette	WARN	TLS certificate errors will be ignored for this session
1573754358863	Marionette	INFO	Stopped listening on port 36165
IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)

IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)

IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)

IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)

IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)

IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)

IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)

IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)

IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)

IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)

IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)

IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)

IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)

IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)

IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)

IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)

IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)

IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)

IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)

IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)

IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)

IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)

IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)

IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)

IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)

IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)

IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)

IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)

IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)

IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)

IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)

IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)

IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)

IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)

IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)

IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)

IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)

IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)

IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)

IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)

IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)

IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)

IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)

IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)

IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)

IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)

IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)

IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)

IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)

IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)

IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)

IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)

IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)

IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)

IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)

IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)

IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)

IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)

IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)

IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)

IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)

IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)

IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)

IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)

IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)

IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)

IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)

[Child 11112, Chrome_ChildThread] WARNING: pipe error: Broken pipe: file /build/firefox-hE9N0Y/firefox-70.0.1+build1/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 728
[Child 11112, Chrome_ChildThread] WARNING: pipe error: Broken pipe: file /build/firefox-hE9N0Y/firefox-70.0.1+build1/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 728
1573754398561	Marionette	INFO	Stopped listening on port 35685
1573765402678	mozrunner::runner	INFO	Running command: "/usr/bin/firefox" "-marionette" "-foreground" "-no-remote" "-profile" "/tmp/rust_mozprofile.Eg8BAZj0kfRW"
1573765403715	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1573765403716	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1573765403716	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1573765403717	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1573765408070	Marionette	INFO	Listening on port 37395
1573765408097	Marionette	WARN	TLS certificate errors will be ignored for this session
JavaScript error: , line 0: uncaught exception: Object
JavaScript error: , line 0: uncaught exception: Object
JavaScript error: , line 0: uncaught exception: Object
Exiting due to channel error.
Exiting due to channel error.
Exiting due to channel error.
1573765737338	mozrunner::runner	INFO	Running command: "/usr/bin/firefox" "-marionette" "-foreground" "-no-remote" "-profile" "/tmp/rust_mozprofile.e5ZrkdPxJzXO"
1573765738250	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1573765738250	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1573765738251	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1573765738251	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1573765742891	Marionette	INFO	Listening on port 41777
1573765742964	Marionette	WARN	TLS certificate errors will be ignored for this session
JavaScript error: , line 0: uncaught exception: Object
JavaScript error: https://static.xx.fbcdn.net/rsrc.php/v3/yR/r/rKQzd5lOgbR.js?_nc_x=3vjgpNIURrx, line 154: Error: Destroyed!
JavaScript error: https://static.xx.fbcdn.net/rsrc.php/v3/yR/r/rKQzd5lOgbR.js?_nc_x=3vjgpNIURrx, line 154: Error: Destroyed!
JavaScript error: chrome://marionette/content/proxy.js, line 287: NS_ERROR_NOT_INITIALIZED
JavaScript error: , line 0: UnknownError: The operation failed for reasons unrelated to the database itself and not covered by any other error code.
1573765977477	Marionette	INFO	Stopped listening on port 41777
1573766172077	mozrunner::runner	INFO	Running command: "/usr/bin/firefox" "-marionette" "-foreground" "-no-remote" "-profile" "/tmp/rust_mozprofile.4J5uB21PeGmJ"
1573766180450	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1573766180450	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1573766180450	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1573766180450	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1573766190708	Marionette	INFO	Listening on port 38091
1573766190861	Marionette	WARN	TLS certificate errors will be ignored for this session
JavaScript error: https://static.xx.fbcdn.net/rsrc.php/v3/yR/r/rKQzd5lOgbR.js?_nc_x=3vjgpNIURrx, line 154: Error: Destroyed!
JavaScript error: https://static.xx.fbcdn.net/rsrc.php/v3/yR/r/rKQzd5lOgbR.js?_nc_x=3vjgpNIURrx, line 154: Error: Destroyed!
JavaScript error: https://static.xx.fbcdn.net/rsrc.php/v3/yR/r/rKQzd5lOgbR.js?_nc_x=3vjgpNIURrx, line 154: Error: Destroyed!
JavaScript error: https://static.xx.fbcdn.net/rsrc.php/v3/yR/r/rKQzd5lOgbR.js?_nc_x=3vjgpNIURrx, line 154: Error: Destroyed!
JavaScript error: chrome://marionette/content/proxy.js, line 287: NS_ERROR_NOT_INITIALIZED
1573766344394	Marionette	INFO	Stopped listening on port 38091
1573766813309	mozrunner::runner	INFO	Running command: "/usr/bin/firefox" "-marionette" "-foreground" "-no-remote" "-profile" "/tmp/rust_mozprofile.LG7WZbkryOR6"
1573766814197	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1573766814197	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1573766814197	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1573766814197	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1573766818130	Marionette	INFO	Listening on port 41505
1573766818229	Marionette	WARN	TLS certificate errors will be ignored for this session
1573766850009	Marionette	WARN	TimedPromise timed out after 500 ms: stacktrace:
bail@chrome://marionette/content/sync.js:237:64
JavaScript error: chrome://marionette/content/proxy.js, line 287: NS_ERROR_NOT_INITIALIZED
1573766965770	Marionette	INFO	Stopped listening on port 41505
1573767000439	mozrunner::runner	INFO	Running command: "/usr/bin/firefox" "-marionette" "-foreground" "-no-remote" "-profile" "/tmp/rust_mozprofile.iwDLqV205iyG"
1573767001358	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1573767001359	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1573767001359	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1573767001359	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1573767005832	Marionette	INFO	Listening on port 33759
1573767005859	Marionette	WARN	TLS certificate errors will be ignored for this session
1573767037332	Marionette	WARN	TimedPromise timed out after 500 ms: stacktrace:
bail@chrome://marionette/content/sync.js:237:64
Exiting due to channel error.
Exiting due to channel error.
Exiting due to channel error.
1573767315936	mozrunner::runner	INFO	Running command: "/usr/bin/firefox" "-marionette" "-foreground" "-no-remote" "-profile" "/tmp/rust_mozprofile.sy9Ph05IFWGy"
1573767316924	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1573767316924	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1573767316925	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1573767316925	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1573767321214	Marionette	INFO	Listening on port 36223
1573767321273	Marionette	WARN	TLS certificate errors will be ignored for this session
JavaScript error: resource://activity-stream/lib/ActivityStreamPrefs.jsm, line 27: NS_ERROR_ILLEGAL_VALUE: Component returned failure code: 0x80070057 (NS_ERROR_ILLEGAL_VALUE) [nsIPrefBranch.removeObserver]
JavaScript error: resource://services-settings/RemoteSettingsClient.jsm, line 149: Error: Unknown callback
[Child 5977, Chrome_ChildThread] WARNING: pipe error: Broken pipe: file /build/firefox-hE9N0Y/firefox-70.0.1+build1/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 728
[Child 5977, Chrome_ChildThread] WARNING: pipe error: Broken pipe: file /build/firefox-hE9N0Y/firefox-70.0.1+build1/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 728
[Child 5977, Chrome_ChildThread] WARNING: pipe error: Broken pipe: file /build/firefox-hE9N0Y/firefox-70.0.1+build1/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 728
[Child 5977, Chrome_ChildThread] WARNING: pipe error: Broken pipe: file /build/firefox-hE9N0Y/firefox-70.0.1+build1/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 728
[Child 5977, Chrome_ChildThread] WARNING: pipe error: Broken pipe: file /build/firefox-hE9N0Y/firefox-70.0.1+build1/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 728
[Child 5977, Chrome_ChildThread] WARNING: pipe error: Broken pipe: file /build/firefox-hE9N0Y/firefox-70.0.1+build1/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 728
[Child 5977, Chrome_ChildThread] WARNING: pipe error: Broken pipe: file /build/firefox-hE9N0Y/firefox-70.0.1+build1/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 728
[Child 5977, Chrome_ChildThread] WARNING: pipe error: Broken pipe: file /build/firefox-hE9N0Y/firefox-70.0.1+build1/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 728
[Child 5977, Chrome_ChildThread] WARNING: pipe error: Broken pipe: file /build/firefox-hE9N0Y/firefox-70.0.1+build1/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 728
[Child 5977, Chrome_ChildThread] WARNING: pipe error: Broken pipe: file /build/firefox-hE9N0Y/firefox-70.0.1+build1/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 728
[Child 5977, Chrome_ChildThread] WARNING: pipe error: Broken pipe: file /build/firefox-hE9N0Y/firefox-70.0.1+build1/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 728
[Child 5977, Chrome_ChildThread] WARNING: pipe error: Broken pipe: file /build/firefox-hE9N0Y/firefox-70.0.1+build1/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 728
[Child 5977, Chrome_ChildThread] WARNING: pipe error: Broken pipe: file /build/firefox-hE9N0Y/firefox-70.0.1+build1/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 728
1573767325485	Marionette	INFO	Stopped listening on port 36223
1573767396428	mozrunner::runner	INFO	Running command: "/usr/bin/firefox" "-marionette" "-foreground" "-no-remote" "-profile" "/tmp/rust_mozprofile.Td9azABHFUPs"
1573767397383	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1573767397383	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1573767397384	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1573767397384	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1573767402273	Marionette	INFO	Listening on port 35741
1573767402357	Marionette	WARN	TLS certificate errors will be ignored for this session
JavaScript error: resource://gre/actors/BrowserElementParent.jsm, line 314: TypeError: state is undefined
JavaScript error: , line 0: NS_ERROR_UNEXPECTED: 
IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)

JavaScript error: resource://gre/actors/BrowserElementParent.jsm, line 314: TypeError: state is undefined
JavaScript error: , line 0: NS_ERROR_UNEXPECTED: 
IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)


###!!! [Child][RunMessage] Error: Channel closing: too late to send/recv, messages will be lost


###!!! [Child][MessageChannel] Error: (msgtype=0x570008,name=PHttpChannel::Msg_DocumentChannelCleanup) Channel closing: too late to send/recv, messages will be lost


###!!! [Child][MessageChannel] Error: (msgtype=0x570008,name=PHttpChannel::Msg_DocumentChannelCleanup) Channel closing: too late to send/recv, messages will be lost


###!!! [Child][RunMessage] Error: Channel closing: too late to send/recv, messages will be lost

1573767428809	Marionette	INFO	Stopped listening on port 35741
1573767492978	mozrunner::runner	INFO	Running command: "/usr/bin/firefox" "-marionette" "-foreground" "-no-remote" "-profile" "/tmp/rust_mozprofile.s2SnNiS9J5C3"
1573767493908	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1573767493909	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1573767493909	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1573767493909	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1573767498303	Marionette	INFO	Listening on port 45919
1573767498402	Marionette	WARN	TLS certificate errors will be ignored for this session
1573767533528	Marionette	WARN	TimedPromise timed out after 500 ms: stacktrace:
bail@chrome://marionette/content/sync.js:237:64
Exiting due to channel error.
1573767620255	mozrunner::runner	INFO	Running command: "/usr/bin/firefox" "-marionette" "-foreground" "-no-remote" "-profile" "/tmp/rust_mozprofile.tMOLKto5NJwc"
1573767621166	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1573767621166	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1573767621167	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1573767621167	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1573767625568	Marionette	INFO	Listening on port 37227
1573767625587	Marionette	WARN	TLS certificate errors will be ignored for this session
[Parent 6757, Gecko_IOThread] WARNING: pipe error (151): Connection reset by peer: file /build/firefox-hE9N0Y/firefox-70.0.1+build1/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 358
Exiting due to channel error.
1573767739268	mozrunner::runner	INFO	Running command: "/usr/bin/firefox" "-marionette" "-foreground" "-no-remote" "-profile" "/tmp/rust_mozprofile.tcO6HEjVVcne"
1573767740232	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1573767740233	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1573767740233	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1573767740233	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1573767744761	Marionette	INFO	Listening on port 34497
1573767744787	Marionette	WARN	TLS certificate errors will be ignored for this session
JavaScript error: chrome://marionette/content/proxy.js, line 287: NS_ERROR_NOT_INITIALIZED
1573768118126	Marionette	INFO	Stopped listening on port 34497
1573797480208	mozrunner::runner	INFO	Running command: "/usr/bin/firefox" "-marionette" "-foreground" "-no-remote" "-profile" "/tmp/rust_mozprofile.Ad6qhIZkpTA6"
1573797493834	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1573797493834	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1573797493834	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1573797493834	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1573797512450	Marionette	INFO	Listening on port 38039
1573797512501	Marionette	WARN	TLS certificate errors will be ignored for this session
JavaScript error: https://www.facebook.com/rsrc.php/v3/yW/r/nDI29jqncRM.js?_nc_x=3vjgpNIURrx, line 154: Error: Destroyed!
JavaScript error: https://www.facebook.com/rsrc.php/v3/yW/r/nDI29jqncRM.js?_nc_x=3vjgpNIURrx, line 154: Error: Destroyed!
Exiting due to channel error.
Exiting due to channel error.
Exiting due to channel error.
1573797674121	mozrunner::runner	INFO	Running command: "/usr/bin/firefox" "-marionette" "-foreground" "-no-remote" "-profile" "/tmp/rust_mozprofile.P2sgYqCsyA6j"
1573797675115	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1573797675115	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1573797675115	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1573797675115	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1573797679701	Marionette	INFO	Listening on port 38903
1573797679749	Marionette	WARN	TLS certificate errors will be ignored for this session
JavaScript error: https://static.xx.fbcdn.net/rsrc.php/v3/yW/r/nDI29jqncRM.js?_nc_x=3vjgpNIURrx, line 154: Error: Destroyed!
JavaScript error: https://static.xx.fbcdn.net/rsrc.php/v3/yW/r/nDI29jqncRM.js?_nc_x=3vjgpNIURrx, line 154: Error: Destroyed!
1573797713231	Marionette	WARN	TimedPromise timed out after 500 ms: stacktrace:
bail@chrome://marionette/content/sync.js:237:64
Exiting due to channel error.
Exiting due to channel error.
Exiting due to channel error.
1573797801004	mozrunner::runner	INFO	Running command: "/usr/bin/firefox" "-marionette" "-foreground" "-no-remote" "-profile" "/tmp/rust_mozprofile.SnzW5y97s1Ss"
1573797801956	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1573797801956	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1573797801956	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1573797801957	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1573797806400	Marionette	INFO	Listening on port 35859
1573797806421	Marionette	WARN	TLS certificate errors will be ignored for this session
JavaScript error: , line 0: uncaught exception: Object
JavaScript error: https://static.xx.fbcdn.net/rsrc.php/v3/yW/r/nDI29jqncRM.js?_nc_x=3vjgpNIURrx, line 154: Error: Destroyed!
JavaScript error: chrome://marionette/content/proxy.js, line 287: NS_ERROR_NOT_INITIALIZED
1573797885921	Marionette	INFO	Stopped listening on port 35859
